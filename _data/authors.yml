Abad, Zahra Shakeri Hossein:
- Abad2018: /2021/08/09/task-interruption-in-software-development-projects.html
Abbasi, Ali:
- Guler2019: /2022/02/21/antifuzz.html
Abdalkareem, Rabe:
- Abdalkareem2017: /2021/09/17/why-do-developers-use-trivial-packages.html
- Latendresse2021: /2022/04/08/continuous-integration-single-statement-bugs.html
Abrahamsson, Pekka:
- Graziotin2014: /2014/03/31/happy-sw-devs-solve-problems-better.html
Abreu, Rui:
- Durieux2020: /2021/10/19/restarted-and-flaky-builds-on-travis-ci.html
Adams, Bram:
- Khomh2012: /2012/05/17/do-faster-releases-improve-software-quality.html
- McIntosh2011: /2011/08/09/an-empirical-study-of-build-maintenance-effort.html
- Tourani2017: /2021/09/18/code-of-conduct-in-open-source-projects.html
Adie, Prestone:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Agarwal, Pawan:
- Hundhausen2011: /2011/12/04/online-vs-face-to-face-pedagogical-code-reviews-an-empirical-comparison.html
Agarwala, Megha:
- Philip2012: /2012/04/10/component-reuse-vs-snippet-remixing.html
Aghajani, Emad:
- Aghajani2019: /2021/10/06/software-documentation-issues-unveiled.html
Agrawal, Amritanshu:
- Majumder2019: /2021/09/10/why-software-projects-need-heroes.html
Aivaloglou, Efthimia:
- Hermans2016: /2016/08/14/novice-smells.html
- Miedema2021: /2021/08/27/errors-in-sql-queries.html
Ajami, Shulamyt:
- Ajami2018: /2021/09/21/syntax-predicates-idioms-what-really-affects-code-complexity.html
Al-Subaihin, Afnan A.:
- AlSubaihin2021: /2021/10/30/app-store-effects-on-software-engineering-practices.html
AlOmar, Eman Abdullah:
- Golubev2021: /2022/03/04/software-refactoring.html
Alaburda, Paulius:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Alawini, Abdussalam:
- Alkhabaz2021: /2021/10/10/mongodb-homework.html
Albers, Casper:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Alencar da Costa, Daniel:
- AlencarDaCosta2017: /2021/08/09/impact-of-rapid-release-cycles-on-integration-delay-of-fixed-issues.html
Ali, Amal (Akmal) Ridhwan Omar:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Ali, Rao Hamza:
- Ali2020: /2021/08/11/cheating-death-survival-analysis-of-python-projects.html
Alkhabaz, Ridha:
- Alkhabaz2021: /2021/10/10/mongodb-homework.html
Almeida, Daniel A.:
- Almeida2017: /2021/09/04/do-software-developers-understand-open-source-licenses.html
Almeida, Lucas:
- Coelho2016: /2021/09/05/two-papers-on-errors.html
Alspaugh, Sara:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Alstott, Jeff:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Altadmri, Amjad:
- Altadmri2015: /2016/06/11/novice-programming-mistakes.html
- Brown2018: /2021/09/03/two-papers-about-the-blackbox-project.html
Althoff, Tim:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Amann, Sven:
- Beller2019: /2021/09/12/developer-testing-in-the-ide.html
- Glanz2020: /2022/03/13/obfuscated-strings-and-privacy.html
Ameller, David:
- Ameller2012: /2012/11/06/how-do-software-architects-consider-non-functional-requirements.html
Ames, Morgan G.:
- Ames2018: /2021/10/11/a-critical-history-of-logo-and-constructionist-learning.html
Amireh, Hashem:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Anda, B.C.D.:
- Anda2009: /2011/09/22/variability-and-reproducibility-in-software-engineering-a-study-of-four-companies-that-developed-the-same-system.html
Andronick, June:
- Staples2013: /2013/06/13/formal-specifications-better-than-function-points-for-code-sizing.html
Andrzejak, Artur:
- Costa2019: /2021/10/19/whats-wrong-with-my-benchmark-results.html
"Aniche, Maur\xEDcio":
- Tomasdottir2020: /2022/04/06/adoption-of-javascript-linters.html
Anthonysamy, Pauline:
- Glanz2020: /2022/03/13/obfuscated-strings-and-privacy.html
Apel, Sven:
- Apel2011: /2011/10/22/three-empirical-studies-from-esecfse11.html
Aranda, Jorge:
- Aranda2009: /2021/09/23/the-secret-life-of-bugs.html
Arisholm, E.:
- Dzidek2008: /2011/08/17/three-empirical-evaluations-of-uml.html
- Hannay2010: /2011/07/26/effects-of-personality-on-pair-programming.html
"Ari\xF1o de la Rubia, Eduardo":
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Arzi, Adbi:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Aschermann, Cornelius:
- Guler2019: /2022/02/21/antifuzz.html
Atapattu, Thushari:
- Prana2018: /2021/09/15/categorizing-the-content-of-github-readme-files.html
August, David I.:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Augustin, Jean-Marie:
- Malik2019: /2021/09/23/the-secret-life-of-bugs.html
Aul, Gabriel:
- Kinshumann2011: /2011/07/18/debugging-in-the-very-large.html
Avgeriou, Paris:
- Spinellis2021: /2021/09/23/two-studies-of-software-evolution.html
Ayala, Claudia:
- Ameller2012: /2012/11/06/how-do-software-architects-consider-non-functional-requirements.html
Bacchelli, Alberto:
- Bogomolov2021: /2021/10/15/authorship-attribution-of-source-code.html
- Gousios2016: /2016/06/07/pull-based-development.html
Bafatakis, Nikolaos:
- Bafatakis2019: /2021/10/01/python-coding-style-compliance-on-stack-overflow.html
"Bahn\xEDk, \u0160t\u011Bp\xE1n":
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Baik, Jason:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Bailey, Brian:
- Codoban2015: /2021/11/17/software-history-under-the-lens.html
Bairavasundaram, Lakshmi:
- Yin2011: /2011/10/22/three-empirical-studies-from-esecfse11.html
Bakker, Marjan:
- Wicherts2011: /2012/05/18/willingness-to-share-research-data-is-related-to-the-strength-of-the-evidence-and-the-quality-of-reporting-of-statistical-results.html
Balachandran, Vipin:
- Balachandran2013: /2013/06/19/reducing-human-effort-and-improving-quality-in-peer-code-reviews-using-automatic-static-analysis-and-reviewer-recommendation.html
Balling, Laura Winther:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Baltes, Sebastian:
- Baltes2020: /2021/10/03/is-40-the-new-60.html
Banker, Sachin:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Bao, Lingfeng:
- Bao2021: /2022/04/04/contributor-prediction-for-github.html
Baranger, David A.A.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Barbosa, Eiji Adachi:
- Barbosa2014: /2021/09/05/two-papers-on-errors.html
Barbosa, Simone Diniz Junqueira:
- Barbosa2014: /2021/09/05/two-papers-on-errors.html
Barik, Titus:
- Barik2017: /2021/09/20/do-developers-read-compiler-error-messages.html
- Barik2018: /2021/09/02/compiler-error-messages-considered-unhelpful.html
- Behroozi2019: /2021/09/13/whats-wrong-with-tech-hiring.html
- Behroozi2020: /2021/09/13/whats-wrong-with-tech-hiring.html
Barke, Helena:
- Barke2019: /2022/04/24/role-clarity-deficiencies-can-wreck-agile-teams.html
Barker, Ken:
- Abad2018: /2021/08/09/task-interruption-in-software-development-projects.html
Barnett, Mike:
- Barnett2011: /2011/06/30/specification-and-verification-the-spec-experience.html
Barr, Dale J.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Barr, Earl T.:
- Barr2012: /2012/05/06/cohesive-and-isolated-development-with-branches.html
- Gao2017: /2021/09/08/to-type-or-not-to-type.html
- Hindle2016: /2012/04/26/on-the-naturalness-of-software.html
- Louis2020: /2022/02/22/where-comments.html
- Meyer2021: /2021/10/04/the-daily-life-of-software-developers.html
Barros, Marcio:
- Ghiotto2020: /2021/08/12/on-the-nature-of-merge-conflicts.html
Barros-Rivera, Brenda:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Barzilay, Ohad:
- Barzilay2011: /2012/05/02/example-embedding.html
Bass, Len:
- Staples2013: /2013/06/13/formal-specifications-better-than-function-points-for-code-sizing.html
Bauer, Matt:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Bauer, Mike:
- Abad2018: /2021/08/09/task-interruption-in-software-development-projects.html
"Baumg\xE4rtner, Lars":
- Glanz2020: /2022/03/13/obfuscated-strings-and-privacy.html
Bavota, Gabriele:
- Aghajani2019: /2021/10/06/software-documentation-issues-unveiled.html
- Scalabrino2021: /2021/10/05/three-papers-on-readability.html
Baysal, Olga:
- Hemmati2013: /2013/06/13/the-msr-cookbook-mining-a-decade-of-research.html
Beard, Stephen:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Beaudoin, Jonathan:
- Malik2019: /2021/09/23/the-secret-life-of-bugs.html
Beck, Fabian:
- Beck2011: /2011/10/22/three-results-many-definitions.html
Becker, Brett A.:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Bednarik, Roman:
- BenAri2011: /2011/12/10/a-decade-of-research-and-development-on-program-animation-the-jeliot-experience.html
Behroozi, Mahnaz:
- Behroozi2019: /2021/09/13/whats-wrong-with-tech-hiring.html
- Behroozi2020: /2021/09/13/whats-wrong-with-tech-hiring.html
- Ford2019: /2021/08/29/beyond-the-code-itself.html
Beller, Moritz:
- Beller2015: /2016/06/08/when-and-why-test.html
- Beller2019: /2021/09/12/developer-testing-in-the-ide.html
Ben-Ari, Mordechai:
- BenAri2011: /2011/12/10/a-decade-of-research-and-development-on-program-animation-the-jeliot-experience.html
Beniamini, Gal:
- Beniamini2017: /2021/08/09/abbreviated-vs-full-names.html
Benlarbi, S.:
- ElEmam2001: /2011/07/07/the-confounding-effect-of-class-size-on-the-validity-of-object-oriented-metrics.html
Berlin, Jesse:
- Patitsas2016: /2016/09/16/five-from-icer-2016.html
Bernstein, Abraham:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Bettenburg, Nicolas:
- Bettenburg2008: /2011/08/30/what-makes-a-good-bug-report.html
Bezemer, Cor-Paul:
- Costa2019: /2021/10/19/whats-wrong-with-my-benchmark-results.html
- Kamienski2021: /2022/03/11/single-statement-bugs-in-python-projects.html
Bezerra, Carla I. M.:
- Lima2021: /2022/04/20/open-source-exceptinon-handling-testing.html
Bhat, Thirumalesh:
- Nagappan2008: /2012/01/25/realizing-quality-improvement-through-test-driven-development.html
Bhowmick, Antara:
- Tomassi2019: /2021/11/10/my-kingdom-for-a-dataset.html
Bianco, Giuseppe:
- Ragkhitwetsagul2021: /2021/08/19/toxic-code-snippets-on-stack-overflow.html
Bird, Christian:
- Barr2012: /2012/05/06/cohesive-and-isolated-development-with-branches.html
- Bird2011: /2011/09/05/dont-touch-my-code.html
- Ford2017: /2021/09/07/characterizing-software-engineering-work-with-personas.html
- Gao2017: /2021/09/08/to-type-or-not-to-type.html
- Hindle2012: /2012/08/23/using-topic-modelling-to-understand-requirements.html
- Kochhar2019: /2022/04/23/closed-to-open-source.html
- Meyer2021: /2021/10/04/the-daily-life-of-software-developers.html
- Washburn2016: /2016/06/05/game-postmortems.html
Black, Sue:
- AlSubaihin2021: /2021/10/30/app-store-effects-on-software-engineering-practices.html
Blaise, Enuh:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Blincoe, Kelly:
- Masood2020a: /2021/08/18/how-agile-teams-make-self-assignment-work.html
- Tamburri2020: /2022/04/22/decline-of-sourceforge.html
Bluedorn, Allen C.:
- Bluedorn1999: /2012/01/05/the-effects-of-stand-up-and-sit-down-meeting-formats-on-meeting-outcomes.html
Boecker, Niels:
- Bafatakis2019: /2021/10/01/python-coding-style-compliance-on-stack-overflow.html
Boehm, Barry:
- Tregubov2017: /2021/09/19/impact-of-task-switching-and-work-interruptions.html
Boelen, Lisa:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Bogart, Chris:
- Bogart2021: /2022/03/25/breaking-changes.html
Bogner, Justus:
- Fritzsch2021: /2022/03/16/resume-driven-development.html
Bogomolov, Egor:
- Bogomolov2021: /2021/10/15/authorship-attribution-of-source-code.html
Boisvert, Ronald F.:
- Hatton1997: /2021/09/23/the-secret-life-of-bugs.html
Boon, Wenjie:
- Bafatakis2019: /2021/10/01/python-coding-style-compliance-on-stack-overflow.html
Borle, Neil C.:
- Borle2017: /2021/09/16/analyzing-the-effects-of-tdd-in-github.html
Bouchard, Durell:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Bouvier, Dennis J.:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Brandl, Benjamin:
- Apel2011: /2011/10/22/three-empirical-studies-from-esecfse11.html
Brax, Christoffer:
- Butler2019: /2022/04/18/company-contributions-to-open-source.html
Briand, L.C.:
- Dzidek2008: /2011/08/17/three-empirical-evaluations-of-uml.html
Briers, Robert A.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Brown, Chris:
- Wang2020: /2021/08/30/two-studies-of-regular-expressions.html
Brown, Neil C. C.:
- Altadmri2015: /2016/06/11/novice-programming-mistakes.html
- Brown2018: /2021/09/03/two-papers-about-the-blackbox-project.html
- WeillTessier2021: /2021/09/03/two-papers-about-the-blackbox-project.html
Brun, Yuriy:
- Brun2011: /2011/09/13/proactive-detection-of-collaboration-conflicts.html
Bryksin, Timofey:
- Bogomolov2021: /2021/10/15/authorship-attribution-of-source-code.html
- Golubev2021: /2022/03/04/software-refactoring.html
Burkhard, Oliver:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Butler, Simon:
- Butler2019: /2022/04/18/company-contributions-to-open-source.html
"B\xF6hme, Marcel":
- Soremekun2021: /2021/10/30/locating-faults-with-program-slicing.html
Cabot, Jordi:
- Ameller2012: /2012/11/06/how-do-software-architects-consider-non-functional-requirements.html
Cai, Yuanfang:
- Mo2021: /2022/03/14/architecture-anti-patterns.html
Campos, Eduardo Cunha:
- Campos2017: /2021/09/11/common-bug-fix-patterns.html
Canela, Miguel-Angel:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Canfora, Gerardo:
- Zampetti2020: /2021/10/18/bad-practices-in-continuous-integration.html
Capra, Licia:
- AlSubaihin2021: /2021/10/30/app-store-effects-on-software-engineering-practices.html
Carbonell, Katerina Bohle:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Carver, Jeffrey C.:
- Kosar2018: /2021/09/20/program-comprehension-of-domain-specific-and-general-purpose-languages.html
- Krein2016: /2016/09/09/replicating-design-patterns-experiment.html
Castrillo, Laura:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Catlett, Timothy:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Chakraborty, Joymallya:
- Majumder2019: /2021/09/10/why-software-projects-need-heroes.html
Chan, C.S. Richard:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Chaudron, Michel R. V.:
- Jolak2020: /2022/03/31/textual-vs-graphic-design-descriptions-and-communication.html
Chen, Jason:
- Harms2016: /2016/09/16/five-from-icer-2016.html
Chen, Mei:
- Alkhabaz2021: /2021/10/10/mongodb-homework.html
Chen, Olivia:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Chen, Tse-Hsun:
- Chen2016: /2016/06/05/maintaining-java-orm.html
- Zhang2020: /2021/09/19/reading-answers-on-stack-overflow-not-enough.html
- Zhang2021b: /2022/03/08/obsolete-answers-on-stack-overflow.html
Chen, Zhihui:
- Tao2021: /2021/10/20/demistifying-error-messages-in-data-science-libraries.html
Cherubini, Mauro:
- Cherubini2007: /2011/06/30/lets-go-to-the-whiteboard.html
Chong, Jan:
- Chong2007: /2011/07/11/the-social-dynamics-of-pair-programming.html
"Cinn\xE9ide, Mel \xD3":
- Cinneide2012: /2013/02/12/experimental-assessment-of-software-metrics-using-automated-refactoring.html
Clark, Michael:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Clarke, Steven:
- Stylos2007: /2011/07/26/usability-implications-of-requiring-parameters-in-objects-constructors.html
Codoban, Mihai:
- Codoban2015: /2021/11/17/software-history-under-the-lens.html
Coelho, Roberta:
- Coelho2016: /2021/09/05/two-papers-on-errors.html
Coghlan, Christy A.:
- Davis2019: /2021/08/30/two-studies-of-regular-expressions.html
Cohn, Brent:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Condie, Tyson:
- Gulzar2016: /2016/06/05/bigdebug.html
Conte, Tayana:
- Oliveira2020: /2021/08/21/metrics-and-team-leaders-perceptions-of-productivity.html
Coppock, Alex:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Costa, Diego Elias:
- Costa2019: /2021/10/19/whats-wrong-with-my-benchmark-results.html
- Latendresse2021: /2022/04/08/continuous-integration-single-statement-bugs.html
Costache, Alexandra Lucia:
- WeillTessier2021: /2021/09/03/two-papers-about-the-blackbox-project.html
Counsell, Steve:
- Cinneide2012: /2013/02/12/experimental-assessment-of-software-metrics-using-automated-refactoring.html
Craig, Michelle:
- Patitsas2016: /2016/09/16/five-from-icer-2016.html
Cristo, Marco:
- Oliveira2020: /2021/08/21/metrics-and-team-leaders-perceptions-of-productivity.html
"Cruz-Lemus, Jos\xE9 A.":
- CruzLemus2009: /2011/08/17/three-empirical-evaluations-of-uml.html
"Cuguer\xF3-Escofet, Nat\xE0lia":
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Curran, Paul G.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Cyrus-Lai, Wilson:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Dabbish, Laura:
- Dabbish2012: /2012/03/01/social-coding-in-github.html
"Dagenais, Barth\xE9l\xE9my":
- Dagenais2010: /2011/08/23/creating-and-evolving-developer-documentation.html
Dai, David:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Dalibor, Manuela:
- Jolak2020: /2022/03/31/textual-vs-graphic-design-descriptions-and-communication.html
Dalla Riva, Giulio Valentino:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Daneva, Maya:
- Racheva2010: /2011/07/04/requirements-prioritization-in-agile-projects-insights-from-a-case-study.html
Dang, Yingnong:
- Dang2012: /2012/07/18/clustering-duplicate-crash-reports.html
Danielsson, Henrik:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Danilova, Anastasia:
- Danilova2021: /2022/04/13/do-you-really-code.html
Dash, Santanu Kumar:
- Louis2020: /2022/02/22/where-comments.html
Davis, James C.:
- Davis2019: /2021/08/30/two-studies-of-regular-expressions.html
DeLine, Rob:
- Cherubini2007: /2011/06/30/lets-go-to-the-whiteboard.html
- Robillard2010: /2011/11/08/a-field-study-of-api-learning-obstacles.html
Decan, Alexandre:
- Decan2021a: /2022/05/20/a-note-on-communication.html
- Decan2021b: /2022/05/20/a-note-on-communication.html
Deng, Shuiguang:
- Han2021: /2021/10/16/open-source-projects-in-baidu-alibaba-and-tencent.html
Denny, Paul:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Derungs, Curdin:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Deunf, Julian Le:
- Malik2019: /2021/09/23/the-secret-life-of-bugs.html
Devanbu, Premkumar:
- Barr2012: /2012/05/06/cohesive-and-isolated-development-with-branches.html
- Bird2011: /2011/09/05/dont-touch-my-code.html
- Hindle2016: /2012/04/26/on-the-naturalness-of-software.html
- Posnett2011: /2012/01/12/got-issues-do-new-features-and-code-improvements-affect-defects.html
- Rahman2011: /2011/06/27/ownership-experience-and-defects.html
- Rahman2013: /2013/07/07/how-and-why-process-metrics-are-better.html
- Tomassi2019: /2021/11/10/my-kingdom-for-a-dataset.html
Dhaliwal, Tejinder:
- Khomh2012: /2012/05/17/do-faster-releases-improve-software-quality.html
Diehl, Stephan:
- Beck2011: /2011/10/22/three-results-many-definitions.html
Dig, Danny:
- Codoban2015: /2021/11/17/software-history-under-the-lens.html
"Dings\xF8yr, Torgeir":
- Moe2010: /2011/08/02/a-teamwork-model-for-understanding-an-agile-team.html
Dittrich, Yvonne:
- Sharp2016: /2016/09/08/ethnography-in-ese.html
Dmeiri, Naji:
- Tomassi2019: /2021/11/10/my-kingdom-for-a-dataset.html
Dolan, Margaret F.J.:
- Malik2019: /2021/09/23/the-secret-life-of-bugs.html
Dolby, Julian:
- RakAmnouykit2020: /2022/03/18/python-3-types-in-the-wild.html
Donadelli, Samuel M.:
- Rigby2016: /2021/09/30/quantifying-and-mitigating-turnover-induced-knowledge-loss.html
Dondelinger, Frank:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Druijff-van de Woestijne, Gerrieke B.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Duarte de Souza, Carolina:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Dube, B. Tyson:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Dubova, Marina:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Dunn, Ben Mark:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Durieux, Thomas:
- Durieux2020: /2021/10/19/restarted-and-flaky-builds-on-travis-ci.html
"Dyb\xE5, Tore":
- Moe2010: /2011/08/02/a-teamwork-model-for-understanding-an-agile-team.html
Dzidek, W.J.:
- Dzidek2008: /2011/08/17/three-empirical-evaluations-of-uml.html
Easterbrook, Steve:
- Patitsas2016: /2016/09/16/five-from-icer-2016.html
Ebel, Gil:
- BenAri2011: /2011/12/10/a-decade-of-research-and-development-on-program-animation-the-jeliot-experience.html
Edelsbrunner, Peter Adriaan:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Edwards, John:
- Zavgorodniaia2021: /2021/09/26/two-papers-on-time.html
Eggett, Dennis L.:
- Krein2016: /2016/09/09/replicating-design-patterns-experiment.html
Eichberg, Michael:
- Eichberg2015: /2016/06/09/hidden-truths.html
Elbaum, Sebastian:
- Stolee2011: /2011/06/27/refactoring-pipe-like-mashups-for-end-user-programmers.html
Emam, K. El:
- ElEmam2001: /2011/07/07/the-confounding-effect-of-class-size-on-the-validity-of-object-oriented-metrics.html
Engvik, H.:
- Hannay2010: /2011/07/26/effects-of-personality-on-pair-programming.html
Ernst, Michael D.:
- Brun2011: /2011/09/13/proactive-detection-of-collaboration-conflicts.html
- Louis2020: /2022/02/22/where-comments.html
Fan, Xuepeng:
- Xu2015: /2016/06/09/too-many-knobs.html
Farhana, Effat:
- Rahman2020a: /2021/08/26/defect-taxonomy-for-infrastructure-as-code.html
Feghhi, Meysam:
- Borle2017: /2021/09/16/analyzing-the-effects-of-tdd-in-github.html
Feist, Jonas:
- Butler2019: /2022/04/18/company-contributions-to-open-source.html
Feitelson, Dror G.:
- Ajami2018: /2021/09/21/syntax-predicates-idioms-what-really-affects-code-complexity.html
- Beniamini2017: /2021/08/09/abbreviated-vs-full-names.html
Feldman, Michael:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Feng, Jing:
- Barik2017: /2021/09/20/do-developers-read-compiler-error-messages.html
Feng, Qiong:
- Mo2021: /2022/03/14/architecture-anti-patterns.html
Fernandes, Eduardo:
- Oliveira2020: /2021/08/21/metrics-and-team-leaders-perceptions-of-productivity.html
Fierro, Fabiana:
- Piantadosi2020: /2021/10/05/three-papers-on-readability.html
Filkov, Vladimir:
- Kavaler2019: /2021/09/28/javascript-quality-assurance-tools-and-usage-outcomes.html
Finley, Sara:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Fletcher, George:
- Miedema2021: /2021/08/27/errors-in-sql-queries.html
Flora, Parminder:
- Chen2016: /2016/06/05/maintaining-java-orm.html
Ford, Denae:
- Barik2018: /2021/09/02/compiler-error-messages-considered-unhelpful.html
- Ford2016: /2016/09/21/paradise-unplugged.html
- Ford2017: /2021/09/07/characterizing-software-engineering-work-with-personas.html
- Ford2019: /2021/08/29/beyond-the-code-itself.html
- Rodeghero2021: /2022/03/28/remote-onboarding.html
Fox, Nick:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Franch, Xavier:
- Ameller2012: /2012/11/06/how-do-software-architects-consider-non-functional-requirements.html
Fritz, Thomas:
- Meyer2014: /2015/08/23/perception-productivity.html
Fritzsch, Jonas:
- Fritzsch2021: /2022/03/16/resume-driven-development.html
Fucci, Davide:
- Fucci2016: /2016/10/05/test-driven-development.html
- Fucci2020: /2021/10/21/the-impact-of-sleep-deprivation.html
"F\xE4hndrich, Manuel":
- Barnett2011: /2011/06/30/specification-and-verification-the-spec-experience.html
Gabel, Mark:
- Hindle2016: /2012/04/26/on-the-naturalness-of-software.html
"Gaberc, Sa\u0161o":
- Kosar2018: /2021/09/20/program-comprehension-of-domain-specific-and-general-purpose-languages.html
Gall, Harald:
- Bird2011: /2011/09/05/dont-touch-my-code.html
- Giger2011: /2011/10/22/three-results-many-definitions.html
- Zampetti2020: /2021/10/18/bad-practices-in-continuous-integration.html
Gallagher, Kevin:
- Gallagher2017: /2022/03/07/new-me.html
Gallardo-Valencia, Rosalva:
- Philip2012: /2012/04/10/component-reuse-vs-snippet-remixing.html
Gamalielsson, Jonas:
- Butler2019: /2022/04/18/company-contributions-to-open-source.html
Gao, Gao:
- Gao2020: /2021/10/14/api-learning-processes.html
Gao, Zheng:
- Gao2017: /2021/09/08/to-type-or-not-to-type.html
Garcia, Alessandro:
- Barbosa2014: /2021/09/05/two-papers-on-errors.html
- Oliveira2020: /2021/08/21/metrics-and-team-leaders-perceptions-of-productivity.html
Garcia, Joshua:
- Mattmann2015: /2016/10/02/grid-revisited.html
Garreton, Gilda:
- Pankratius2012: /2012/06/18/combining-functional-and-imperative-programming-for-multicore-software-an-empirical-study-evaluating-scala-and-java.html
Garrison, S. Mason:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Gauthier, Francois:
- Gauthier2013: /2013/07/24/semantic-smells-and-errors-in-access-control-models-a-case-study-in-php.html
Genero, Marcela:
- CruzLemus2009: /2011/08/17/three-empirical-evaluations-of-uml.html
German, Daniel M.:
- Barr2012: /2012/05/06/cohesive-and-isolated-development-with-branches.html
Gerosa, Marco A.:
- Kinsman2021: /2021/10/07/how-do-software-developers-use-github-actions.html
- Wessel2020: /2021/09/29/effects-of-adopting-code-review-bots.html
Ghanbari, Hadi:
- Taipalus2021: /2021/10/28/error-messages-in-relational-atabase-systems.html
Ghiotto, Gleiph:
- Ghiotto2020: /2021/08/12/on-the-nature-of-merge-conflicts.html
Ghosh, Soumyadeep:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Giger, Emanuel:
- Giger2011: /2011/10/22/three-results-many-definitions.html
Gingichashvili, Sarah:
- Beniamini2017: /2021/08/09/abbreviated-vs-full-names.html
Glanz, Leonid:
- Eichberg2015: /2016/06/09/hidden-truths.html
- Glanz2020: /2022/03/13/obfuscated-strings-and-privacy.html
Glerum, Kirk:
- Kinshumann2011: /2011/07/18/debugging-in-the-very-large.html
Gnambs, Timo:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Godfrey, Michael W.:
- Chen2016: /2016/06/05/maintaining-java-orm.html
- Hemmati2013: /2013/06/13/the-msr-cookbook-mining-a-decade-of-research.html
- Kapser2008: /2011/08/16/cloning-considered-harmful-considered-harmful.html
- Zhu2021: /2021/08/10/developers-fix-their-own-simple-bugs-differently-from-other-developers.html
Goel, Aviral:
- Turcotte2020: /2022/03/23/designing-types-for-r-empirically.html
Goel, N.:
- ElEmam2001: /2011/07/07/the-confounding-effect-of-class-size-on-the-validity-of-object-oriented-metrics.html
Goldstein, Pavel:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Golubev, Yaroslav:
- Golubev2021: /2022/03/04/software-refactoring.html
Gong, Yuanyuan:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
"Gonz\xE1lez-Barahona, Jes\xFAs M.":
- RodriguezPerez2018: /2021/10/02/reproducibility-and-credibility-in-empirical-software-engineering.html
Goues, Claire Le:
- Durieux2020: /2021/10/19/restarted-and-flaky-builds-on-travis-ci.html
- Ni2021: /2021/11/18/synthesis-approach-for-data-science-api-refactoring.html
Gousios, Georgios:
- Beller2015: /2016/06/08/when-and-why-test.html
- Beller2019: /2021/09/12/developer-testing-in-the-ide.html
- Coelho2016: /2021/09/05/two-papers-on-errors.html
- Gousios2016: /2016/06/07/pull-based-development.html
Grahn, Hilkka:
- Taipalus2021: /2021/10/28/error-messages-in-relational-atabase-systems.html
Grand, Erin:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Grant, David:
- Kinshumann2011: /2011/07/18/debugging-in-the-very-large.html
Gravino, Carmine:
- DeLucia2009: /2011/08/17/three-empirical-evaluations-of-uml.html
Graziotin, Daniel:
- Graziotin2014: /2014/03/31/happy-sw-devs-solve-problems-better.html
Green, Thomas R. G.:
- Green1996: /2012/06/25/usability-analysis-of-visual-programming-environments-a-cognitive-dimensions-framework.html
Greenawalt, Brandon:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Greenberg, Steve:
- Kinshumann2011: /2011/07/18/debugging-in-the-very-large.html
Greer, Des:
- McGee2011: /2011/10/28/software-requirements-change-taxonomy-evaluation-by-case-study.html
Greiner, Russell:
- Borle2017: /2021/09/16/analyzing-the-effects-of-tdd-in-github.html
Grimstad, Stein:
- Jorgensen2011: /2011/10/18/the-impact-of-irrelevant-and-misleading-information.html
- Jorgensen2012: /2012/06/12/software-development-estimation-biases-the-role-of-interdependence.html
Griswold, William G.:
- Liao2016: /2016/09/16/five-from-icer-2016.html
Gu, Xiaodong:
- Gu2018: /2021/12/02/deep-code-search.html
Gulwani, Sumit:
- Wang2016: /2016/10/02/filtering-spreadsheet-data.html
Gulzar, Muhammad Ali:
- Gulzar2016: /2016/06/05/bigdebug.html
Guo, Philip J.:
- Ford2016: /2016/09/21/paradise-unplugged.html
Gustavsson, Tomas:
- Butler2019: /2022/04/18/company-contributions-to-open-source.html
Guzdial, Mark:
- Tew2011: /2011/12/02/the-fcs1-a-language-independent-assessment-of-cs1-knowledge.html
"G\xE9rard, S\xE9bastien":
- Jolak2020: /2022/03/31/textual-vs-graphic-design-descriptions-and-communication.html
"G\xFCler, Emre":
- Guler2019: /2022/02/21/antifuzz.html
Hamilton, Travis:
- Malik2019: /2021/09/23/the-secret-life-of-bugs.html
Han, Dan:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Han, Junxiao:
- Han2021: /2021/10/16/open-source-projects-in-baidu-alibaba-and-tencent.html
Hanel, Paul H.P.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Hanenberg, Stefan:
- Hanenberg2010: /2012/10/25/an-experiment-about-static-and-dynamic-type-systems.html
Hannay, J.E.:
- Hannay2010: /2011/07/26/effects-of-personality-on-pair-programming.html
Hardin, Caroline D.:
- McIntosh2021: /2021/10/08/do-hackathon-projects-change-the-world.html
Harman, Mark:
- AlSubaihin2021: /2021/10/30/app-store-effects-on-software-engineering-practices.html
- Cinneide2012: /2013/02/12/experimental-assessment-of-software-metrics-using-automated-refactoring.html
Harms, Kyle James:
- Harms2016: /2016/09/16/five-from-icer-2016.html
Harpstead, Erik:
- Rivers2016: /2016/09/16/five-from-icer-2016.html
Harrington, Brian:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Hassan, Ahmed E.:
- AlencarDaCosta2017: /2021/08/09/impact-of-rapid-release-cycles-on-integration-delay-of-fixed-issues.html
- Chen2016: /2016/06/05/maintaining-java-orm.html
- McIntosh2011: /2011/08/09/an-empirical-study-of-build-maintenance-effort.html
- Nagappan2015: /2016/06/09/goto-in-c.html
- Thongtanunam2016: /2016/06/07/code-ownership-revisited.html
- Zhang2020: /2021/09/19/reading-answers-on-stack-overflow-not-enough.html
- Zhang2021b: /2022/03/08/obsolete-answers-on-stack-overflow.html
Hata, Hideaki:
- Hata2019: /2021/08/23/links-in-source-code-comments.html
Hatton, L.:
- Hatton1994: /2021/09/23/the-secret-life-of-bugs.html
- Hatton1997: /2021/09/23/the-secret-life-of-bugs.html
Hayashi, Junichi:
- Hayashi2019: /2021/09/26/two-papers-on-time.html
Hebig, Regina:
- Jolak2020: /2022/03/31/textual-vs-graphic-design-descriptions-and-communication.html
Heer, Jeffrey:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Hegde, Maithri:
- Nakshatri2016: /2016/06/05/java-exception-handling.html
Hellas, Arto:
- Zavgorodniaia2021: /2021/09/26/two-papers-on-time.html
Hemmati, Hadi:
- Hemmati2013: /2013/06/13/the-msr-cookbook-mining-a-decade-of-research.html
Herbsleb, James:
- Bogart2021: /2022/03/25/breaking-changes.html
Herbsleb, Jim:
- Dabbish2012: /2012/03/01/social-coding-in-github.html
Hermann, Ben:
- Eichberg2015: /2016/06/09/hidden-truths.html
Hermans, Felienne:
- Hermans2011: /2012/05/24/supporting-professional-spreadsheet-users-by-generating-leveled-dataflow-diagrams.html
- Hermans2016: /2016/08/14/novice-smells.html
- Hermans2021: /2021/10/02/programmers-brain.html
Hernandez, Alexa:
- Nassif2021: /2022/04/15/generating-unit-tests-for-documentation.html
Herrmann, Andrea:
- Racheva2010: /2011/07/04/requirements-prioritization-in-agile-projects-insights-from-a-case-study.html
Herzig, Kim:
- Herzig2013: /2013/06/13/its-not-a-bug-its-a-feature-how-misclassification-impacts-bug-prediction.html
Heymann, Elisa:
- Miller2020: /2021/10/01/the-relevance-of-classic-fuzz-testing.html
Higo, Yoshiki:
- Hayashi2019: /2021/09/26/two-papers-on-time.html
Hilton, Michael:
- Durieux2020: /2021/10/19/restarted-and-flaky-builds-on-travis-ci.html
Hindle, Abram:
- Barr2012: /2012/05/06/cohesive-and-isolated-development-with-branches.html
- Borle2017: /2021/09/16/analyzing-the-effects-of-tdd-in-github.html
- Hindle2012: /2012/08/23/using-topic-modelling-to-understand-requirements.html
- Hindle2016: /2012/04/26/on-the-naturalness-of-software.html
- Kamienski2021: /2022/03/11/single-statement-bugs-in-python-projects.html
- Posnett2011: /2012/01/12/got-issues-do-new-features-and-code-improvements-affect-defects.html
Hirzel, Martin:
- RakAmnouykit2020: /2022/03/18/python-3-types-in-the-wild.html
Hoda, Rashina:
- Masood2020a: /2021/08/18/how-agile-teams-make-self-assignment-work.html
Hofmann, Owen S.:
- Rossbach2010: /2011/08/24/is-transactional-programming-actually-easier.html
Hofmeister, Johannes:
- Hofmeister2017: /2021/08/09/abbreviated-vs-full-names.html
Holmes, Elisabeth:
- Barik2017: /2021/09/20/do-developers-read-compiler-error-messages.html
Holmes, Reid:
- Brun2011: /2011/09/13/proactive-detection-of-collaboration-conflicts.html
- Hemmati2013: /2013/06/13/the-msr-cookbook-mining-a-decade-of-research.html
- Inozemtseva2014: /2021/09/24/coverage-is-not-strongly-correlated-with-test-suite-effectiveness.html
Holt, Daniel V.:
- Hofmeister2017: /2021/08/09/abbreviated-vs-full-names.html
Holz, Thorsten:
- Guler2019: /2022/02/21/antifuzz.html
Homer, Michael:
- Muhammad2019: /2021/09/22/taxonomy-of-package-management.html
Hong, Antony B.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Hood, David:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Hora, Andre:
- Hora2021a: /2021/11/23/googling-for-software-development.html
- Hora2021b: /2021/09/01/what-code-is-deliberately-excluded-from-test-coverage-and-why.html
Horstmann, Stefan:
- Danilova2021: /2022/04/13/do-you-really-code.html
Houck, Brian:
- Rodeghero2021: /2022/03/28/remote-onboarding.html
Hoye, Mike:
- Almeida2017: /2021/09/04/do-software-developers-understand-open-source-licenses.html
Hsueh, Justin:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Hu, Mingzhe:
- Peng2021: /2021/08/17/python-language-features.html
Huang, Jialu:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Huang, Lilian:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Huang, Zhiqiu:
- Yang2022: /2022/09/19/developer-git-knowledge.html
- Zhang2021a: /2021/11/15/enriching-api-documentation-with-code-samples-and-usage-scenarios.html
Hui, Kent N.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Hultman, Keith A.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Hundhausen, Christopher D.:
- Hundhausen2011: /2011/12/04/online-vs-face-to-face-pedagogical-code-reviews-an-empirical-comparison.html
Hunt, Galen:
- Kinshumann2011: /2011/07/18/debugging-in-the-very-large.html
Hurlbutt, Tom:
- Chong2007: /2011/07/11/the-social-dynamics-of-pair-programming.html
IV, Louis G. Michael:
- Davis2019: /2021/08/30/two-studies-of-regular-expressions.html
Ichinco, Michelle:
- Gao2020: /2021/10/14/api-learning-processes.html
Iida, Hajimu:
- Thongtanunam2016: /2016/06/07/code-ownership-revisited.html
Inozemtseva, Laura:
- Inozemtseva2014: /2021/09/24/coverage-is-not-strongly-correlated-with-test-suite-effectiveness.html
Interlandi, Matteo:
- Gulzar2016: /2016/06/05/bigdebug.html
Ishio, Takashi:
- Hata2019: /2021/08/23/links-in-source-code-comments.html
Jablin, Thomas B.:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Jackson, Daniel:
- Near2016: /2016/06/05/finding-security-bugs.html
- PerezDeRosso2016: /2016/09/30/rethinking-git.html
Jacobson, Ivar:
- Jacobson2013: /2013/08/12/review-essence-of-software-engineering.html
Jain, Pranay U.:
- Yuan2014: /2014/10/09/simple-testing-can-prevent-most-critical-failures.html
Javaid, Azka:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Jeffery, Ross:
- Staples2013: /2013/06/13/formal-specifications-better-than-function-points-for-code-sizing.html
Jennings, Jamie A.:
- Wang2020: /2021/08/30/two-studies-of-regular-expressions.html
Jermann, Patrick:
- Nussli2012: /2012/02/23/looking-at-the-same-thing-in-pair-programming-tasks.html
Jiang, He:
- Zhang2021a: /2021/11/15/enriching-api-documentation-with-code-samples-and-usage-scenarios.html
Jiang, Lily Ji:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Jin, Guoliang:
- Shao2020: /2022/04/11/database-performance-antipatterns.html
Jin, Long:
- Xu2015: /2016/06/09/too-many-knobs.html
Jin, Xianhao:
- Jin2021: /2022/03/21/strategies-to-improve-continuous-integration.html
Johnson, Nick P.:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Jolak, Rodi:
- Jolak2020: /2022/03/31/textual-vs-graphic-design-descriptions-and-communication.html
Jones, Simon Peyton:
- Mokhov2018: /2021/09/21/build-systems-a-la-carte.html
Jong, Jonathan:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Juristo, Natalia:
- Fucci2016: /2016/10/05/test-driven-development.html
- Fucci2020: /2021/10/21/the-impact-of-sleep-deprivation.html
- Krein2016: /2016/09/09/replicating-design-patterns-experiment.html
Just, Sascha:
- Bettenburg2008: /2011/08/30/what-makes-a-good-bug-report.html
- Herzig2013: /2013/06/13/its-not-a-bug-its-a-feature-how-misclassification-impacts-bug-prediction.html
"J\xF8rgensen, Magne":
- Jorgensen2011: /2011/10/18/the-impact-of-irrelevant-and-misleading-information.html
- Jorgensen2012: /2012/06/12/software-development-estimation-biases-the-role-of-interdependence.html
Kale, Alex:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Kalliamvakou, Eirini:
- Kochhar2019: /2022/04/23/closed-to-open-source.html
Kamdar, Jash:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Kamei, Yasutaka:
- McIntosh2011: /2011/08/09/an-empirical-study-of-build-maintenance-effort.html
- Nagappan2015: /2016/06/09/goto-in-c.html
Kamienski, Arthur V.:
- Kamienski2021: /2022/03/11/single-statement-bugs-in-python-projects.html
Kamil, Amir:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Kanat-Alexander, Max:
- KanatAlexander2012: /2012/05/03/a-review-of-code-simplicity.html
Kane, David:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Kappler, Gregor:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Kapser, Cory J.:
- Kapser2008: /2011/08/16/cloning-considered-harmful-considered-harmful.html
Karkare, Amey:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Karras, Oliver:
- Abad2018: /2021/08/09/task-interruption-in-software-development-projects.html
Kasi, Bakhtiar Khan:
- Kasi2013: /2014/04/25/cassandra-proactive-conflict-minimization-through-optimized-task-scheduling.html
Kaszubowski, Erikson:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Kavaler, David:
- Kavaler2019: /2021/09/28/javascript-quality-assurance-tools-and-usage-outcomes.html
Kavanagh, Christopher M.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Kazman, Rick:
- Mo2021: /2022/03/14/architecture-anti-patterns.html
- Tamburri2020: /2022/04/22/decline-of-sourceforge.html
Kechagia, Maria:
- Spinellis2016: /2021/09/23/two-studies-of-software-evolution.html
Kelchtermans, Stijn:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Kelleher, Caitlin:
- Gao2020: /2021/10/14/api-learning-processes.html
Kelleher, Caitlin L.:
- Harms2016: /2016/09/16/five-from-icer-2016.html
Keung, Jacky W.:
- Kocaguneli2012: /2012/04/17/ensemble-effort-estimation.html
Khabsa, Madian:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Khomh, Foutse:
- Khomh2012: /2012/05/17/do-faster-releases-improve-software-quality.html
Kiefer, Marc:
- Kiefer2015: /2016/06/12/empirical-parellelism.html
Kilamo, Terhi:
- Maenpaa2018: /2021/09/09/organizing-for-openness.html
Kim, Dohyeong:
- Kim2016: /2016/10/01/apex.html
Kim, Dongsun:
- Kim2013a: /2013/06/06/automatic-patch-generation-learned-from-human-written-patches.html
Kim, Hanjun:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Kim, I. Luk:
- Kim2016: /2016/10/01/apex.html
Kim, Miryung:
- Gulzar2016: /2016/06/05/bigdebug.html
- Meng2013: /2013/09/20/locating-and-applying-systematic-edits.html
Kim, Sunghun:
- Gu2018: /2021/12/02/deep-code-search.html
- Kim2013a: /2013/06/06/automatic-patch-generation-learned-from-human-written-patches.html
- Pan2008: /2021/09/11/common-bug-fix-patterns.html
Kinshumann, Kinshuman:
- Kinshumann2011: /2011/07/18/debugging-in-the-very-large.html
Kinsman, Timothy:
- Kinsman2021: /2021/10/07/how-do-software-developers-use-github-actions.html
Kirschner, Lukas:
- Soremekun2021: /2021/10/30/locating-faults-with-program-slicing.html
Klein, Gerwin:
- Staples2013: /2013/06/13/formal-specifications-better-than-function-points-for-code-sizing.html
Kleinberg, Bennett:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Knutson, Charles D.:
- Krein2016: /2016/09/09/replicating-design-patterns-experiment.html
Ko, Amy J.:
- Cherubini2007: /2011/06/30/lets-go-to-the-whiteboard.html
Kocaguneli, Ekrem:
- Kocaguneli2012: /2012/04/17/ensemble-effort-estimation.html
Kochhar, Pavneet Singh:
- Kochhar2019: /2022/04/23/closed-to-open-source.html
Koedinger, Ken:
- Rivers2016: /2016/09/16/five-from-icer-2016.html
Kolanski, Rafal:
- Staples2013: /2013/06/13/formal-specifications-better-than-function-points-for-code-sizing.html
Kononenko, Oleksii:
- Hemmati2013: /2013/06/13/the-msr-cookbook-mining-a-decade-of-research.html
Korpi, Harri:
- Vanhanen2007: /2011/10/11/experiences-of-using-pair-programming-in-an-agile-project.html
"Kosar, Toma\u017E":
- Kosar2018: /2021/09/20/program-comprehension-of-domain-specific-and-general-purpose-languages.html
Koschke, Rainer:
- Maalej2014: /2015/02/14/on-comprehension-of-program-comprehension.html
Kouros, Jens:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Kovalenko, Vladimir:
- Bogomolov2021: /2021/10/15/authorship-attribution-of-source-code.html
Krause, Heather:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Krein, Jonathan L.:
- Krein2016: /2016/09/09/replicating-design-patterns-experiment.html
Krinke, Jens:
- Bafatakis2019: /2021/10/01/python-coding-style-compliance-on-stack-overflow.html
- Ragkhitwetsagul2021: /2021/08/19/toxic-code-snippets-on-stack-overflow.html
Krka, Ivo:
- Mattmann2015: /2016/10/02/grid-revisited.html
Krolikowski, Dariusz:
- Nielebock2018: /2021/09/06/commenting-source-code.html
Krypotos, Angelos-Miltiadis:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
"Kr\xFCger, Jacob":
- Nielebock2018: /2021/09/06/commenting-source-code.html
Kula, Raula Gaikovina:
- Hata2019: /2021/08/23/links-in-source-code-comments.html
"Kulesza, Uir\xE1":
- AlencarDaCosta2017: /2021/08/09/impact-of-rapid-release-cycles-on-integration-delay-of-fixed-issues.html
Kume, Hitoshi:
- Nakajo1991: /2022/03/01/software-error-cause-effect.html
Kurbatova, Zarina:
- Golubev2021: /2022/03/04/software-refactoring.html
Kusumoto, Shinji:
- Hayashi2019: /2021/09/26/two-papers-on-time.html
Kwon, Yonghwi:
- Kim2016: /2016/10/01/apex.html
"K\xE4stner, Christian":
- Apel2011: /2011/10/22/three-empirical-studies-from-esecfse11.html
- Bogart2021: /2022/03/25/breaking-changes.html
- Overney2020: /2021/10/13/an-empirical-study-of-donations-in-open-source.html
"K\xF6lling, Michael":
- Brown2018: /2021/09/03/two-papers-about-the-blackbox-project.html
"K\u0159ikava, Filip":
- Turcotte2020: /2022/03/23/designing-types-for-r-empirically.html
LaToza, Thomas D.:
- Mangano2015: /2021/09/24/how-software-designers-interact-with-sketches-at-the-whiteboard.html
Lane, Jo Ann:
- Tregubov2017: /2021/09/19/impact-of-task-switching-and-work-interruptions.html
Lanza, Michele:
- Aghajani2019: /2021/10/06/software-documentation-issues-unveiled.html
Latendresse, Jasmine:
- Latendresse2021: /2022/04/08/continuous-integration-single-statement-bugs.html
Laurenzano, Michael A.:
- Liao2016: /2016/09/16/five-from-icer-2016.html
Lavbivc, Dejan:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Layman, Lucas:
- Menzies2016: /2021/09/26/are-delayed-issues-harder-to-resolve.htm
Lee, Cynthia Bailey:
- Porter2013: /2013/03/08/halving-fail-rates-using-peer-instruction.html
Lee, Dongyoon:
- Davis2019: /2021/08/30/two-studies-of-regular-expressions.html
Lee, Rui Ling:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Leffel, Timothy:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Leich, Thomas:
- Nielebock2018: /2021/09/06/commenting-source-code.html
Leino, K. Rustan M.:
- Barnett2011: /2011/06/30/specification-and-verification-the-spec-experience.html
Leinonen, Juho:
- Zavgorodniaia2021: /2021/09/26/two-papers-on-time.html
Leitner, Philip:
- Costa2019: /2021/10/19/whats-wrong-with-my-benchmark-results.html
"Leit\xE3o, Roxanne":
- Leitao2019: /2021/09/27/technology-facilitated-intimate-partner-abuse.html
Lemire, Daniel:
- Lemire2021: /2022/03/30/number-parsing-at-a-gigabyte-a-second.html
Lengauer, Christian:
- Apel2011: /2011/10/22/three-empirical-studies-from-esecfse11.html
Levy, Karen:
- Levy2020: /2021/08/28/privacy-threats-in-intimate-relationships.html
Levy, Ronit Ben-Bassat:
- BenAri2011: /2011/12/10/a-decade-of-research-and-development-on-program-animation-the-jeliot-experience.html
Lewis, Chris:
- Lewis2013: /2013/06/06/does-bug-prediction-support-human-developers-findings-from-a-google-case-study.html
Lewis, Corey:
- Staples2013: /2013/06/13/formal-specifications-better-than-function-points-for-code-sizing.html
Li, Sihan:
- Li2013: /2013/04/16/a-characteristic-study-on-failures-of-production-distributed-data-parallel-programs.html
Liao, Soohyun Nam:
- Liao2016: /2016/09/16/five-from-icer-2016.html
Lidman, Svante:
- Jacobson2013: /2013/08/12/review-essence-of-software-engineering.html
"Liebig, J\xF6rg":
- Apel2011: /2011/10/22/three-empirical-studies-from-esecfse11.html
Lim, Wei Yang:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Lima, Luan P.:
- Lima2021: /2022/04/20/open-source-exceptinon-handling-testing.html
Lin, Haibo:
- Li2013: /2013/04/16/a-characteristic-study-on-failures-of-production-distributed-data-parallel-programs.html
Lin, Haoxiang:
- Li2013: /2013/04/16/a-characteristic-study-on-failures-of-production-distributed-data-parallel-programs.html
Lin, Wei:
- Li2013: /2013/04/16/a-characteristic-study-on-failures-of-production-distributed-data-parallel-programs.html
Lin, Zhongpeng:
- Lewis2013: /2013/06/06/does-bug-prediction-support-human-developers-findings-from-a-google-case-study.html
Linares-Vasquez, Mario:
- Aghajani2019: /2021/10/06/software-documentation-issues-unveiled.html
- Scalabrino2021: /2021/10/05/three-papers-on-readability.html
"Linares-V\xE1squez, Mario":
- Scalabrino2018: /2021/10/05/three-papers-on-readability.html
Linstead, Erik:
- Ali2020: /2021/08/11/cheating-death-survival-analysis-of-python-projects.html
Liu, Feng:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Liu, Peng:
- Kim2016: /2016/10/01/apex.html
Liu, Yang:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Liu, Yen-Chuan:
- Tomassi2019: /2021/11/10/my-kingdom-for-a-dataset.html
Liu, Yepang:
- Tao2021: /2021/10/20/demistifying-error-messages-in-data-science-libraries.html
Liverani, Silvia:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Lo, David:
- Bao2021: /2022/04/04/contributor-prediction-for-github.html
- Han2021: /2021/10/16/open-source-projects-in-baidu-alibaba-and-tencent.html
- Lo2015: /2016/06/09/perceived-relevance.html
- Prana2018: /2021/09/15/categorizing-the-content-of-github-readme-files.html
Loh, Bianca:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Loihle, Gretchen:
- Kinshumann2011: /2011/07/18/debugging-in-the-very-large.html
Lonroth, Erik:
- Butler2019: /2022/04/18/company-contributions-to-open-source.html
Lopes, Cristina V.:
- Philip2012: /2012/04/10/component-reuse-vs-snippet-remixing.html
Louis, Annie:
- Louis2020: /2022/02/22/where-comments.html
Louridas, Panos:
- Mitropoulos2019: /2021/09/27/the-evolution-of-javascript-code-in-the-wild.html
- Spinellis2016: /2021/09/23/two-studies-of-software-evolution.html
Love, Mary Sue:
- Bluedorn1999: /2012/01/05/the-effects-of-stand-up-and-sit-down-meeting-formats-on-meeting-outcomes.html
Low, Jia Wei:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Lu, Alton:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Lubick, Kevin:
- Barik2017: /2021/09/20/do-developers-read-compiler-error-messages.html
Lucia, Andrea De:
- DeLucia2009: /2011/08/17/three-empirical-evaluations-of-uml.html
Lundell, Bjorn:
- Butler2019: /2022/04/18/company-contributions-to-open-source.html
Luo, Yu:
- Yuan2014: /2014/10/09/simple-testing-can-prevent-most-critical-failures.html
Lynce, Ines:
- Ni2021: /2021/11/18/synthesis-approach-for-data-science-api-refactoring.html
"L\xF3pez de la Mora, Fernando":
- Lopez2018: /2021/11/26/metric-based-comparisons-of-software-libraries.html
"L\xF8nsmann, Dorte":
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Maalej, Walid:
- Maalej2014: /2015/02/14/on-comprehension-of-program-comprehension.html
MacDonald, Kyle:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
MacDonell, Stephen G.:
- McLeod2011: /2011/12/21/factors-that-affect-software-systems-development-project-outcomes.html
Madan, Christopher R.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Madan, Nikhil:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Madsen, Lasse Hjorth:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Mahmoudi, Mehran:
- Mahmoudi2019: /2021/12/13/refactorings-in-merge-conflicts.html
Maimone, Christina:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Majumder, Suvodeep:
- Majumder2019: /2021/09/10/why-software-projects-need-heroes.html
Malik, Mashkoor:
- Malik2019: /2021/09/23/the-secret-life-of-bugs.html
Malloy, Brian A.:
- Malloy2018: /2021/08/17/python-language-features.html
Mandl, Benjamin:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Mangano, Nicolas:
- Mangano2015: /2021/09/24/how-software-designers-interact-with-sketches-at-the-whiteboard.html
Mangold, Alexandra:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Manquinho, Vasco:
- Ni2021: /2021/11/18/synthesis-approach-for-data-science-api-refactoring.html
Manso, M. Esperanza:
- CruzLemus2009: /2011/08/17/three-empirical-evaluations-of-uml.html
Marinescu, Cristina:
- Marinescu2011: /2011/10/22/three-results-many-definitions.html
Marshall, Adrienne:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Martins, Ruben:
- Ni2021: /2021/11/18/synthesis-approach-for-data-science-api-refactoring.html
Masetti, Giuseppe:
- Malik2019: /2021/09/23/the-secret-life-of-bugs.html
Masood, Zainab:
- Masood2020a: /2021/08/18/how-agile-teams-make-self-assignment-work.html
Matskewich, Helena Ester:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Matsumoto, Shinsuke:
- Hayashi2019: /2021/09/26/two-papers-on-time.html
Mattmann, Chris A.:
- Mattmann2015: /2016/10/02/grid-revisited.html
Mattsson, Anders:
- Butler2019: /2022/04/18/company-contributions-to-open-source.html
Mavon, Kimia:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Maximilien, E. Michael:
- Nagappan2008: /2012/01/25/realizing-quality-improvement-through-test-driven-development.html
McCrevan, Daniel:
- RakAmnouykit2020: /2022/03/18/python-3-types-in-the-wild.html
McDonald, Chris:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
McGee, Sharon:
- McGee2011: /2011/10/28/software-requirements-change-taxonomy-evaluation-by-case-study.html
McIntosh, Lukas:
- McIntosh2021: /2021/10/08/do-hackathon-projects-change-the-world.html
McIntosh, Shane:
- AlencarDaCosta2017: /2021/08/09/impact-of-rapid-release-cycles-on-integration-delay-of-fixed-issues.html
- McIntosh2011: /2011/08/09/an-empirical-study-of-build-maintenance-effort.html
- Nagappan2015: /2016/06/09/goto-in-c.html
- Thongtanunam2016: /2016/06/07/code-ownership-revisited.html
McKinley, Kathryn S.:
- Meng2013: /2013/09/20/locating-and-applying-systematic-edits.html
McLain, Katherine L.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
McLeod, Laurie:
- McLeod2011: /2011/12/21/factors-that-affect-software-systems-development-project-outcomes.html
McMahon, Paul E.:
- Jacobson2013: /2013/08/12/review-essence-of-software-engineering.html
McNamara, Amelia A.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
McNamara, Andrew:
- McNamara2018: /2022/02/20/ethics-in-decision-making.html
McNeill, Mhairi:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
"Medvidovi\u0107, Nenad":
- Mattmann2015: /2016/10/02/grid-revisited.html
Meinicke, Jens:
- Overney2020: /2021/10/13/an-empirical-study-of-donations-in-open-source.html
Memon, Nasir D.:
- Gallagher2017: /2022/03/07/new-me.html
Meneely, Andrew:
- Meneely2011: /2011/09/06/does-adding-manpower-also-affect-quality.html
Meng, Na:
- Meng2013: /2013/09/20/locating-and-applying-systematic-edits.html
Mens, Tom:
- Decan2021a: /2022/05/20/a-note-on-communication.html
- Decan2021b: /2022/05/20/a-note-on-communication.html
Menzies, Tim:
- Kocaguneli2012: /2012/04/17/ensemble-effort-estimation.html
- Majumder2019: /2021/09/10/why-software-projects-need-heroes.html
- Menzies2016: /2021/09/26/are-delayed-issues-harder-to-resolve.htm
Mercer, Rick:
- Wilkerson2012: /2011/08/31/comparing-the-defect-reduction-benefits-of-code-inspection-and-test-driven-development.html
Merlo, Ettore:
- Gauthier2013: /2013/07/24/semantic-smells-and-errors-in-access-control-models-a-case-study-in-php.html
Mernik, Marjan:
- Kosar2018: /2021/09/20/program-comprehension-of-domain-specific-and-general-purpose-languages.html
Mertens, Ulf:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Meyer, Andre N.:
- Meyer2021: /2021/10/04/the-daily-life-of-software-developers.html
"Meyer, Andr\xE9 N.":
- Meyer2014: /2015/08/23/perception-productivity.html
Mezini, Mira:
- Eichberg2015: /2016/06/09/hidden-truths.html
- Glanz2020: /2022/03/13/obfuscated-strings-and-privacy.html
- Sven2019: /2021/11/29/next-steps-in-static-api-misuse-detection.html
Miedema, Daphne:
- Miedema2021: /2021/08/27/errors-in-sql-queries.html
Mikkonen, Tommi:
- Maenpaa2018: /2021/09/09/organizing-for-openness.html
Milanova, Ana:
- RakAmnouykit2020: /2022/03/18/python-3-types-in-the-wild.html
Miller, Barton:
- Miller2020: /2021/10/01/the-relevance-of-classic-fuzz-testing.html
Miller, Craig S.:
- Miller2016: /2016/09/16/five-from-icer-2016.html
Miller, David:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Millstein, Todd:
- Gulzar2016: /2016/06/05/bigdebug.html
Mitchell, Neil:
- Mokhov2018: /2021/09/21/build-systems-a-la-carte.html
Mitropoulos, Dimitris:
- Mitropoulos2019: /2021/09/27/the-evolution-of-javascript-code-in-the-wild.html
Mkaouer, Mohamed Wiem:
- Golubev2021: /2022/03/04/software-refactoring.html
Mo, Ran:
- Mo2021: /2022/03/14/architecture-anti-patterns.html
Mockus, Audris:
- Anda2009: /2011/09/22/variability-and-reproducibility-in-software-engineering-a-study-of-four-companies-that-developed-the-same-system.html
- Mockus2010: /2011/06/27/organizational-volatility-and-its-effects-on-software.html
- Nagappan2015: /2016/06/09/goto-in-c.html
- Rigby2016: /2021/09/30/quantifying-and-mitigating-turnover-induced-knowledge-loss.html
Moe, Nils Brede:
- Moe2010: /2011/08/02/a-teamwork-model-for-understanding-an-agile-team.html
Moghadam, Iman Hemati:
- Cinneide2012: /2013/02/12/experimental-assessment-of-software-metrics-using-automated-refactoring.html
Mohamed, Zainab:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Mokhov, Andrey:
- Mokhov2018: /2021/09/21/build-systems-a-la-carte.html
Moldon, Lukas:
- Moldon2021: /2021/10/03/how-gamification-affects-software-developers.html
Molenaar, Dylan:
- Wicherts2011: /2012/05/18/willingness-to-share-research-data-is-related-to-the-strength-of-the-evidence-and-the-quality-of-reporting-of-statistical-results.html
Moore, Andrew:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Moore, Ben:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Morasca, Sandro:
- CruzLemus2009: /2011/08/17/three-empirical-evaluations-of-uml.html
"Moreno, Andr\xE9s":
- BenAri2011: /2011/12/10/a-decade-of-research-and-development-on-program-animation-the-jeliot-experience.html
Moreno, Laura:
- Aghajani2019: /2021/10/06/software-documentation-issues-unveiled.html
Muhammad, Hisham:
- Muhammad2019: /2021/09/22/taxonomy-of-package-management.html
Mujahid, Suhaib:
- Abdalkareem2017: /2021/09/17/why-do-developers-use-trivial-packages.html
Murase, Toshio:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Murphy, Brendan:
- Bird2011: /2011/09/05/dont-touch-my-code.html
Murphy, Gail C.:
- Almeida2017: /2021/09/04/do-software-developers-understand-open-source-licenses.html
- Bao2021: /2022/04/04/contributor-prediction-for-github.html
- Meyer2014: /2015/08/23/perception-productivity.html
Murphy-Hill, Emerson:
- Barik2017: /2021/09/20/do-developers-read-compiler-error-messages.html
- Barik2018: /2021/09/02/compiler-error-messages-considered-unhelpful.html
- McNamara2018: /2022/02/20/ethics-in-decision-making.html
Murray, Toby:
- Staples2013: /2013/06/13/formal-specifications-better-than-function-points-for-code-sizing.html
Murta, Leonardo:
- Ghiotto2020: /2021/08/12/on-the-nature-of-merge-conflicts.html
Myller, Niko:
- BenAri2011: /2011/12/10/a-decade-of-research-and-development-on-program-animation-the-jeliot-experience.html
"M\xE4enp\xE4\xE4, Hanna":
- Maenpaa2018: /2021/09/09/organizing-for-openness.html
"M\xE4kinen, Simo":
- Maenpaa2018: /2021/09/09/organizing-for-openness.html
"M\xE4nnist\xF6, Tomi":
- Maenpaa2018: /2021/09/09/organizing-for-openness.html
"M\xFCller, Patrick":
- Glanz2020: /2022/03/13/obfuscated-strings-and-privacy.html
"M\xFCller, Peter":
- Barnett2011: /2011/06/30/specification-and-verification-the-spec-experience.html
Nadi, Sarah:
- Hemmati2013: /2013/06/13/the-msr-cookbook-mining-a-decade-of-research.html
- Lopez2018: /2021/11/26/metric-based-comparisons-of-software-libraries.html
- Mahmoudi2019: /2021/12/13/refactorings-in-merge-conflicts.html
- Sven2019: /2021/11/29/next-steps-in-static-api-misuse-detection.html
- Tang2021: /2021/11/17/using-so-comment-edit-pairs.html
Nagappan, Meiyappan:
- Nagappan2015: /2016/06/09/goto-in-c.html
- Washburn2016: /2016/06/05/game-postmortems.html
Nagappan, Nachiappan:
- Bird2011: /2011/09/05/dont-touch-my-code.html
- Ford2017: /2021/09/07/characterizing-software-engineering-work-with-personas.html
- Hindle2012: /2012/08/23/using-topic-modelling-to-understand-requirements.html
- Kochhar2019: /2022/04/23/closed-to-open-source.html
- Lo2015: /2016/06/09/perceived-relevance.html
- Nagappan2008: /2012/01/25/realizing-quality-improvement-through-test-driven-development.html
Nagy, Csaba:
- Aghajani2019: /2021/10/06/software-documentation-issues-unveiled.html
Naiakshina, Alena:
- Danilova2021: /2022/04/13/do-you-really-code.html
Nakajo, Takeshi:
- Nakajo1991: /2022/03/01/software-error-cause-effect.html
Nakshatri, Suman:
- Nakshatri2016: /2016/06/05/java-exception-handling.html
Nam, Jaechang:
- Kim2013a: /2013/06/06/automatic-patch-generation-learned-from-human-written-patches.html
Nanthaamornphong, Aziz:
- Krein2016: /2016/09/09/replicating-design-patterns-experiment.html
Nantz, Eric:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Naseeb, Chan:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Nasrullah, Ziauddin:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Nasser, Mohamed:
- Chen2016: /2016/06/05/maintaining-java-orm.html
Nassif, Mathieu:
- Nassif2021: /2022/04/15/generating-unit-tests-for-documentation.html
Near, Joseph P.:
- Near2016: /2016/06/05/finding-security-bugs.html
Nejkovic, Valentina:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Nell, Colleen S.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Nelson, Andrew A.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Nelson, Andrew Arthur:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Ng, Pan-Wei:
- Jacobson2013: /2013/08/12/review-essence-of-software-engineering.html
Nguyen, Hoan Anh:
- Sven2019: /2021/11/29/next-steps-in-static-api-misuse-detection.html
Nguyen, Thanh H.D.:
- McIntosh2011: /2011/08/09/an-empirical-study-of-build-maintenance-effort.html
Nguyen, Tien N.:
- Sven2019: /2021/11/29/next-steps-in-static-api-misuse-detection.html
Ni, Ansong:
- Ni2021: /2021/11/18/synthesis-approach-for-data-science-api-refactoring.html
Nichols, Greg:
- Kinshumann2011: /2011/07/18/debugging-in-the-very-large.html
Nichols, William:
- Menzies2016: /2021/09/26/are-delayed-issues-harder-to-resolve.htm
Nielebock, Sebastian:
- Nielebock2018: /2021/09/06/commenting-source-code.html
Nilsonne, Gustav:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Nobel, Peter:
- Dang2012: /2012/07/18/clustering-duplicate-crash-reports.html
Nolan, Rory:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Notkin, David:
- Brun2011: /2011/09/13/proactive-detection-of-collaboration-conflicts.html
Nourry, Olivier:
- Abdalkareem2017: /2021/09/17/why-do-developers-use-trivial-packages.html
Nunamaker, Jay F.:
- Wilkerson2012: /2011/08/31/comparing-the-defect-reduction-benefits-of-code-inspection-and-test-driven-development.html
"N\xFCssli, Marc-Antoine":
- Nussli2012: /2012/02/23/looking-at-the-same-thing-in-pair-programming-tasks.html
O'Brien, Christopher E.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
O'Neill, Patrick:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
O'Shea, Kieran:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Oh, Taewook:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Oivo, Markku:
- Fucci2016: /2016/10/05/test-driven-development.html
Olita, Toto:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Oliveira, Edson:
- Oliveira2020: /2021/08/21/metrics-and-team-leaders-perceptions-of-productivity.html
Oliveto, Rocco:
- DeLucia2009: /2011/08/17/three-empirical-evaluations-of-uml.html
- Piantadosi2020: /2021/10/05/three-papers-on-readability.html
- Ragkhitwetsagul2021: /2021/08/19/toxic-code-snippets-on-stack-overflow.html
- Scalabrino2018: /2021/10/05/three-papers-on-readability.html
- Scalabrino2021: /2021/10/05/three-papers-on-readability.html
Orbach, Alon Klein:
- Beniamini2017: /2021/08/09/abbreviated-vs-full-names.html
Orgovan, Vince:
- Kinshumann2011: /2011/07/18/debugging-in-the-very-large.html
Ortmeier, Frank:
- Nielebock2018: /2021/09/06/commenting-source-code.html
Osera, Peter-Michael:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Otner, Sarah M.G.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Otterbacher, Jahna:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Ou, Rong:
- Lewis2013: /2013/06/06/does-bug-prediction-support-human-developers-findings-from-a-google-case-study.html
Overney, Cassandra:
- Overney2020: /2021/10/13/an-empirical-study-of-donations-in-open-source.html
Oznacar, Gazi:
- Bafatakis2019: /2021/10/01/python-coding-style-compliance-on-stack-overflow.html
Paixao, Matheus:
- Lima2021: /2022/04/20/open-source-exceptinon-handling-testing.html
- Ragkhitwetsagul2021: /2021/08/19/toxic-code-snippets-on-stack-overflow.html
Palechor, Luisa:
- Kamienski2021: /2022/03/11/single-statement-bugs-in-python-projects.html
Pallec, Xavier Le:
- Jolak2020: /2022/03/31/textual-vs-graphic-design-descriptions-and-communication.html
Palomba, Fabio:
- Tamburri2020: /2022/04/22/decline-of-sourceforge.html
Palsetia, Diana:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Pan, Kai:
- Pan2008: /2021/09/11/common-bug-fix-patterns.html
Pan, Minxue:
- Yang2022: /2022/09/19/developer-git-knowledge.html
Panichella, Annibale:
- Beller2015: /2016/06/08/when-and-why-test.html
- Beller2019: /2021/09/12/developer-testing-in-the-ide.html
Panichella, Sebastiano:
- Zampetti2020: /2021/10/18/bad-practices-in-continuous-integration.html
Pankratius, Victor:
- Pankratius2012: /2012/06/18/combining-functional-and-imperative-programming-for-multicore-software-an-empirical-study-evaluating-scala-and-java.html
Park, George:
- Baltes2020: /2021/10/03/is-40-the-new-60.html
Parlett-Pelleriti, Chelsea:
- Ali2020: /2021/08/11/cheating-death-survival-analysis-of-python-projects.html
Parnin, Chris:
- Barik2017: /2021/09/20/do-developers-read-compiler-error-messages.html
- Barik2018: /2021/09/02/compiler-error-messages-considered-unhelpful.html
- Behroozi2019: /2021/09/13/whats-wrong-with-tech-hiring.html
- Behroozi2020: /2021/09/13/whats-wrong-with-tech-hiring.html
- Ford2016: /2016/09/21/paradise-unplugged.html
- Ford2019: /2021/08/29/beyond-the-code-itself.html
- Parnin2012: /2012/07/04/programmer-information-needs-after-memory-failure.html
- Rahman2019: /2021/11/23/security-smells-in-infrastructure-as-code-scripts.html
- Rahman2020a: /2021/08/26/defect-taxonomy-for-infrastructure-as-code.html
Parnum, Iain:
- Malik2019: /2021/09/23/the-secret-life-of-bugs.html
Pasupathy, Shankar:
- Xu2015: /2016/06/09/too-many-knobs.html
- Yin2011: /2011/10/22/three-empirical-studies-from-esecfse11.html
Patil, Sameer:
- Gallagher2017: /2022/03/07/new-me.html
Patitsas, Elizabeth:
- Patitsas2016: /2016/09/16/five-from-icer-2016.html
Pearce, Janice L.:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Peng, Yun:
- Peng2021: /2021/08/17/python-language-features.html
Penta, Massimiliano Di:
- Zampetti2020: /2021/10/18/bad-practices-in-continuous-integration.html
Peraire, Cecile:
- Sedano2017: /2021/08/29/software-development-waste.html
Pereira, Bianca:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Perez De Rosso, Santiago:
- PerezDeRosso2016: /2016/09/30/rethinking-git.html
Perry, David Mitchel:
- Kim2016: /2016/10/01/apex.html
Petre, Marian:
- Green1996: /2012/06/25/usability-analysis-of-visual-programming-environments-a-cognitive-dimensions-framework.html
- Mangano2015: /2021/09/24/how-software-designers-interact-with-sketches-at-the-whiteboard.html
- Petre2013: /2013/06/13/uml-in-practice-2.html
Pettit, Raymond:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Philip, Kavita:
- Philip2012: /2012/04/10/component-reuse-vs-snippet-remixing.html
Piantadosi, Valentina:
- Piantadosi2020: /2021/10/05/three-papers-on-readability.html
Piattini, Mario:
- CruzLemus2009: /2011/08/17/three-empirical-evaluations-of-uml.html
Pietri, Antoine:
- Pietri2019: /2021/08/11/cheating-death-survival-analysis-of-python-projects.html
Pinzger, Martin:
- Giger2011: /2011/10/22/three-results-many-definitions.html
- Hermans2011: /2012/05/24/supporting-professional-spreadsheet-users-by-generating-leveled-dataflow-diagrams.html
Polasek, Ivan:
- Jolak2020: /2022/03/31/textual-vs-graphic-design-descriptions-and-communication.html
Popescu, Daniel:
- Mattmann2015: /2016/10/02/grid-revisited.html
Porter, Leo:
- Liao2016: /2016/09/16/five-from-icer-2016.html
- Porter2013: /2013/03/08/halving-fail-rates-using-peer-instruction.html
Poshyvanyk, Denys:
- Scalabrino2018: /2021/10/05/three-papers-on-readability.html
- Scalabrino2021: /2021/10/05/three-papers-on-readability.html
Posnett, Daryl:
- Posnett2011: /2012/01/12/got-issues-do-new-features-and-code-improvements-affect-defects.html
Poulsen, Seth:
- Alkhabaz2021: /2021/10/10/mongodb-homework.html
Power, James F.:
- Malloy2018: /2021/08/17/python-language-features.html
Pozdniakov, Ivan:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Prabhu, Prakash:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Prana, Gede Artha Azriadi:
- Prana2018: /2021/09/15/categorizing-the-content-of-github-readme-files.html
Prasad, Vaishali Venkatesh:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Prather, James:
- Becker2019: /2021/09/02/compiler-error-messages-considered-unhelpful.html
Prechelt, Lutz:
- Barke2019: /2022/04/24/role-clarity-deficiencies-can-wreck-agile-teams.html
- Krein2016: /2016/09/09/replicating-design-patterns-experiment.html
Premraj, Rahul:
- Bettenburg2008: /2011/08/30/what-makes-a-good-bug-report.html
Pritchard, David:
- Pritchard2015: /2016/06/12/error-message-frequency.html
Proksch, Sebastian:
- Beller2019: /2021/09/12/developer-testing-in-the-ide.html
Protzko, John:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Qin, Shengchao:
- Tao2021: /2021/10/20/demistifying-error-messages-in-data-science-libraries.html
Qiu, Zhengyi:
- Shao2020: /2022/04/11/database-performance-antipatterns.html
Racheva, Zornitza:
- Racheva2010: /2011/07/04/requirements-prioritization-in-agile-projects-insights-from-a-case-study.html
Ragavan, Sruti Srinivasa:
- Codoban2015: /2021/11/17/software-history-under-the-lens.html
Ragkhitwetsagul, Chaiyong:
- Ragkhitwetsagul2021: /2021/08/19/toxic-code-snippets-on-stack-overflow.html
Rahman, Akond:
- Rahman2019: /2021/11/23/security-smells-in-infrastructure-as-code-scripts.html
- Rahman2020a: /2021/08/26/defect-taxonomy-for-infrastructure-as-code.html
Rahman, Foyzur:
- Rahman2011: /2011/06/27/ownership-experience-and-defects.html
- Rahman2013: /2013/07/07/how-and-why-process-metrics-are-better.html
Rai, S.N.:
- ElEmam2001: /2011/07/07/the-confounding-effect-of-class-size-on-the-validity-of-object-oriented-metrics.html
Rak-amnouykit, Ingkarat:
- RakAmnouykit2020: /2022/03/18/python-3-types-in-the-wild.html
Ralph, Paul:
- Sedano2017: /2021/08/29/software-development-waste.html
Raman, Arun:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Ramos, Daniel:
- Ni2021: /2021/11/18/synthesis-approach-for-data-science-api-refactoring.html
Ratanotayanon, Sukanya:
- Philip2012: /2012/04/10/component-reuse-vs-snippet-remixing.html
Real, Lucas C. Villa:
- Muhammad2019: /2021/09/22/taxonomy-of-package-management.html
Rebryk, Yurii:
- Bogomolov2021: /2021/10/15/authorship-attribution-of-source-code.html
Reif, Michael:
- Glanz2020: /2022/03/13/obfuscated-strings-and-privacy.html
Ren, Zhilei:
- Zhang2021a: /2021/11/15/enriching-api-documentation-with-code-samples-and-usage-scenarios.html
Renna Rodrigues, Guilherme:
- Yuan2014: /2014/10/09/simple-testing-can-prevent-most-critical-failures.html
Reyt, Jean-Nicolas:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Riccomini, Chris:
- Riccomini2021: /2021/10/24/whats-missing-from-the-missing-readme.html
Riddle, Travis:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Rigby, Peter C.:
- Barr2012: /2012/05/06/cohesive-and-isolated-development-with-branches.html
- Rigby2011: /2011/07/18/understanding-broadcast-based-peer-review-on-open-source-projects.html
- Rigby2016: /2021/09/30/quantifying-and-mitigating-turnover-induced-knowledge-loss.html
Rigger, Manuel:
- Rigger2020: /2021/10/07/finding-bugs-in-database-systems-via-query-partitioning.html
Risi, Michele:
- Scanniello2017: /2021/08/09/abbreviated-vs-full-names.html
Ritala, Paavo:
- Maenpaa2018: /2021/09/09/organizing-for-openness.html
Rivers, Kelly:
- Rivers2016: /2016/09/16/five-from-icer-2016.html
Robbes, Romain:
- Nagappan2015: /2016/06/09/goto-in-c.html
Roberts, A.:
- Hatton1994: /2021/09/23/the-secret-life-of-bugs.html
Robillard, Martin P.:
- Dagenais2010: /2011/08/23/creating-and-evolving-developer-documentation.html
- Nassif2021: /2022/04/15/generating-unit-tests-for-documentation.html
- Robillard2010: /2011/11/08/a-field-study-of-api-learning-obstacles.html
Robinson, David:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Robinson, Emily:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Robles, Gregorio:
- RodriguezPerez2018: /2021/10/02/reproducibility-and-credibility-in-empirical-software-engineering.html
Rocha, Lincoln S.:
- Lima2021: /2022/04/20/open-source-exceptinon-handling-testing.html
Roche, Marc:
- Malik2019: /2021/09/23/the-secret-life-of-bugs.html
Rodchenko, Natalia:
- Tregubov2017: /2021/09/19/impact-of-task-switching-and-work-interruptions.html
Rodeghero, Paige:
- Rodeghero2021: /2022/03/28/remote-onboarding.html
Rodriguez-Rivera, Gustavo:
- Kim2016: /2016/10/01/apex.html
"Rodr\xEDguez-P\xE9rez, Gema":
- RodriguezPerez2018: /2021/10/02/reproducibility-and-credibility-in-empirical-software-engineering.html
Roehm, Tobias:
- Maalej2014: /2015/02/14/on-comprehension-of-program-comprehension.html
Romano, Simone:
- Fucci2016: /2016/10/05/test-driven-development.html
- Fucci2020: /2021/10/21/the-impact-of-sleep-deprivation.html
- Scanniello2017: /2021/08/09/abbreviated-vs-full-names.html
Ropovik, Ivan:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Rosenberg, Joshua M.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Rossbach, Christopher J.:
- Rossbach2010: /2011/08/24/is-transactional-programming-actually-easier.html
Rotella, Pete:
- Meneely2011: /2011/09/06/does-adding-manpower-also-affect-quality.html
Rothen, Stephane:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Rubio-Gonzalez, Cindy:
- Tomassi2019: /2021/11/10/my-kingdom-for-a-dataset.html
Rugaber, Spencer:
- Parnin2012: /2012/07/04/programmer-information-needs-after-memory-failure.html
Ryaboy, Dmitriy:
- Riccomini2021: /2021/10/24/whats-missing-from-the-missing-readme.html
Sadowski, Caitlin:
- Lewis2013: /2013/06/06/does-bug-prediction-support-human-developers-findings-from-a-google-case-study.html
Salazar, Martin Cabello:
- Bafatakis2019: /2021/10/01/python-coding-style-compliance-on-stack-overflow.html
Salis, Vitalis:
- Mitropoulos2019: /2021/09/27/the-evolution-of-javascript-code-in-the-wild.html
Sarma, Anita:
- Kasi2013: /2014/04/25/cassandra-proactive-conflict-minimization-through-optimized-task-scheduling.html
Sarro, Federica:
- AlSubaihin2021: /2021/10/30/app-store-effects-on-software-engineering-practices.html
Sathiyanarayanan, Pavithra:
- Washburn2016: /2016/06/05/game-postmortems.html
Savarimuthu, Bastin Tony Roy:
- Sharma2021: /2022/04/25/rationale-for-open-source-development-decisions.html
Savary-Leblanc, Maxime:
- Jolak2020: /2022/03/31/textual-vs-graphic-design-descriptions-and-communication.html
Scalabrino, Simone:
- Piantadosi2020: /2021/10/05/three-papers-on-readability.html
- Scalabrino2018: /2021/10/05/three-papers-on-readability.html
- Scalabrino2021: /2021/10/05/three-papers-on-readability.html
Scanniello, Giuseppe:
- Fucci2016: /2016/10/05/test-driven-development.html
- Fucci2020: /2021/10/21/the-impact-of-sleep-deprivation.html
- Scanniello2017: /2021/08/09/abbreviated-vs-full-names.html
Schaumans, Catherine B.C.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Schimel, Alexandre C. G.:
- Malik2019: /2021/09/23/the-secret-life-of-bugs.html
Schmidt, Felix:
- Pankratius2012: /2012/06/18/combining-functional-and-imperative-programming-for-multicore-software-an-empirical-study-evaluating-scala-and-java.html
Schneider, Kurt:
- Abad2018: /2021/08/09/task-interruption-in-software-development-projects.html
Schneier, Bruce:
- Levy2020: /2021/08/28/privacy-threats-in-intimate-relationships.html
"Schr\xF6ter, Adrian":
- Bettenburg2008: /2011/08/30/what-makes-a-good-bug-report.html
Schulte, Wolfram:
- Barnett2011: /2011/06/30/specification-and-verification-the-spec-experience.html
Schulte-Mecklenbeck, Michael:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Schweinsberg, Martin:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Sedano, Todd:
- Sedano2017: /2021/08/29/software-development-waste.html
Sentance, Sue:
- Brown2018: /2021/09/03/two-papers-about-the-blackbox-project.html
Seppi, Kevin D.:
- Krein2016: /2016/09/09/replicating-design-patterns-experiment.html
Serebrenik, Alexander:
- Baltes2020: /2021/10/03/is-40-the-new-60.html
- Ford2019: /2021/08/29/beyond-the-code-itself.html
- Piantadosi2020: /2021/10/05/three-papers-on-readability.html
- Tourani2017: /2021/09/18/code-of-conduct-in-open-source-projects.html
- Wessel2020: /2021/09/29/effects-of-adopting-code-review-bots.html
Servant, Francisco:
- Davis2019: /2021/08/30/two-studies-of-regular-expressions.html
- Jin2021: /2022/03/21/strategies-to-improve-continuous-integration.html
Settle, Amber:
- Miller2016: /2016/09/16/five-from-icer-2016.html
Shang, Weiyi:
- Chen2016: /2016/06/05/maintaining-java-orm.html
- DePadua2018: /2021/09/16/exception-handling-practices-and-post-release-defects.html
Shao, Shudi:
- Shao2020: /2022/04/11/database-performance-antipatterns.html
Sharma, Nirek:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Sharma, Pankajeshwara Nand:
- Sharma2021: /2022/04/25/rationale-for-open-source-development-decisions.html
Sharp, Helen:
- Sharp2016: /2016/09/08/ethnography-in-ese.html
Shepperd, Martin:
- Fucci2016: /2016/10/05/test-driven-development.html
Shihab, Emad:
- Abdalkareem2017: /2021/09/17/why-do-developers-use-trivial-packages.html
- Latendresse2021: /2022/04/08/continuous-integration-single-statement-bugs.html
Shirolkar, Shivani:
- Behroozi2020: /2021/09/13/whats-wrong-with-tech-hiring.html
Shotwell, Gordon:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Shrestha, Raj:
- Zavgorodniaia2021: /2021/09/26/two-papers-on-time.html
Shull, Forrest:
- Menzies2016: /2021/09/26/are-delayed-issues-harder-to-resolve.htm
Siebert, Susanna:
- Stefik2011: /2011/10/24/an-empirical-comparison-of-the-accuracy-rates-of-novices-using-the-quorum-perl-and-randomo-programming-languages.html
- Stefik2013: /2014/01/29/stefik-siebert-syntax.html
Siegmund, Janet:
- Hofmeister2017: /2021/08/09/abbreviated-vs-full-names.html
Sigweni, Boyce:
- Fucci2016: /2016/10/05/test-driven-development.html
Sikkel, Klaas:
- Racheva2010: /2011/07/04/requirements-prioritization-in-agile-projects-insights-from-a-case-study.html
Silberzahn, Raphael:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Sim, Susan Elliott:
- Philip2012: /2012/04/10/component-reuse-vs-snippet-remixing.html
Simon, Beth:
- Porter2013: /2013/03/08/halving-fail-rates-using-peer-instruction.html
Singh, Rishabh:
- Wang2016: /2016/10/02/filtering-spreadsheet-data.html
Siponen, Mikko:
- Taipalus2018: /2021/08/27/errors-in-sql-queries.html
Sjoberg, Johan:
- Butler2019: /2022/04/18/company-contributions-to-open-source.html
"Sj\xF8berg, D.I.K.":
- Anda2009: /2011/09/22/variability-and-reproducibility-in-software-engineering-a-study-of-four-companies-that-developed-the-same-system.html
- Hannay2010: /2011/07/26/effects-of-personality-on-pair-programming.html
Skarzynski, Martin:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Slattery, Kim:
- Stefik2011: /2011/10/24/an-empirical-comparison-of-the-accuracy-rates-of-novices-using-the-quorum-perl-and-randomo-programming-languages.html
Smith, Justin:
- Barik2017: /2021/09/20/do-developers-read-compiler-error-messages.html
- Ford2016: /2016/09/21/paradise-unplugged.html
- McNamara2018: /2022/02/20/ethics-in-decision-making.html
Smith, Matthew:
- Danilova2021: /2022/04/13/do-you-really-code.html
Snellman, Kaisa:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Sommer, S. Amy:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Song, Jaewoo:
- Kim2013a: /2013/06/06/automatic-patch-generation-learned-from-human-written-patches.html
Soremekun, Ezekiel:
- Soremekun2021: /2021/10/30/locating-faults-with-program-slicing.html
Spence, Ian:
- Jacobson2013: /2013/08/12/review-essence-of-software-engineering.html
Spinellis, Diomidis:
- Mitropoulos2019: /2021/09/27/the-evolution-of-javascript-code-in-the-wild.html
- Pietri2019: /2021/08/11/cheating-death-survival-analysis-of-python-projects.html
- Spinellis2016: /2021/09/23/two-studies-of-software-evolution.html
- Spinellis2021: /2021/09/23/two-studies-of-software-evolution.html
Sridharan, Ashvitha:
- Nassif2021: /2022/04/15/generating-unit-tests-for-documentation.html
Stanger, Nigel:
- Sharma2021: /2022/04/25/rationale-for-open-source-development-decisions.html
Staples, Mark:
- Staples2013: /2013/06/13/formal-specifications-better-than-function-points-for-code-sizing.html
Staub, Nicola:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Stedden, William:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Stefik, Andreas:
- Stefik2011: /2011/10/24/an-empirical-comparison-of-the-accuracy-rates-of-novices-using-the-quorum-perl-and-randomo-programming-languages.html
- Stefik2013: /2014/01/29/stefik-siebert-syntax.html
Stefik, Melissa:
- Stefik2011: /2011/10/24/an-empirical-comparison-of-the-accuracy-rates-of-novices-using-the-quorum-perl-and-randomo-programming-languages.html
Steinmacher, Igor:
- Oliveira2020: /2021/08/21/metrics-and-team-leaders-perceptions-of-productivity.html
- Wessel2020: /2021/09/29/effects-of-adopting-code-review-bots.html
Stodden, Victoria:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Stoffel, Martin A.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Stolee, Kathryn T.:
- Stolee2011: /2011/06/27/refactoring-pipe-like-mashups-for-end-user-programmers.html
- Wang2020: /2021/08/30/two-studies-of-regular-expressions.html
Stoltzman, Scott:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Storey, Margaret-Anne:
- Gousios2016: /2016/06/07/pull-based-development.html
- Rigby2011: /2011/07/18/understanding-broadcast-based-peer-review-on-open-source-projects.html
Strobl, Carolin:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Strohmaier, Markus:
- Moldon2021: /2021/10/03/how-gamification-affects-software-developers.html
Stroulia, Eleni:
- Borle2017: /2021/09/16/analyzing-the-effects-of-tdd-in-github.html
Stuart, Colleen:
- Dabbish2012: /2012/03/01/social-coding-in-github.html
Stumm, Michael:
- Yuan2014: /2014/10/09/simple-testing-can-prevent-most-critical-failures.html
Stylos, Jeffrey:
- Stylos2007: /2011/07/26/usability-implications-of-requiring-parameters-in-objects-constructors.html
Su, Zhendong:
- Hindle2016: /2012/04/26/on-the-naturalness-of-software.html
- Rigger2020: /2021/10/07/finding-bugs-in-database-systems-via-query-partitioning.html
Subbaiah, Subashini:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Sutinen, Erkki:
- BenAri2011: /2011/12/10/a-decade-of-research-and-development-on-program-animation-the-jeliot-experience.html
Sutton, Charles:
- Louis2020: /2022/02/22/where-comments.html
Sven, Amann:
- Sven2019: /2021/11/29/next-steps-in-static-api-misuse-detection.html
Taipalus, Toni:
- Taipalus2018: /2021/08/27/errors-in-sql-queries.html
- Taipalus2021: /2021/10/28/error-messages-in-relational-atabase-systems.html
Talwadker, Rukma:
- Xu2015: /2016/06/09/too-many-knobs.html
Tamburri, Damian Andrew:
- Tamburri2020: /2022/04/22/decline-of-sourceforge.html
Tang, Henry:
- Tang2021: /2021/11/17/using-so-comment-edit-pairs.html
Tao, Yida:
- Tao2021: /2021/10/20/demistifying-error-messages-in-data-science-libraries.html
Tatman, Rachael:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Tetali, Sai Deep:
- Gulzar2016: /2016/06/05/bigdebug.html
Tew, Allison Elliott:
- Tew2011: /2011/12/02/the-fcs1-a-language-independent-assessment-of-cs1-knowledge.html
Thandra, Sahithi:
- Nakshatri2016: /2016/06/05/java-exception-handling.html
Thibodeau, Paul H.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Thongtanunam, Patanamon:
- Thongtanunam2016: /2016/06/07/code-ownership-revisited.html
Thung, Ferdian:
- Bogart2021: /2022/03/25/breaking-changes.html
- Prana2018: /2021/09/15/categorizing-the-content-of-github-readme-files.html
Tian, Yuan:
- Yasmin2020: /2022/03/09/rest-api-deprecation.html
Tiarks, Rebecca:
- Maalej2014: /2015/02/14/on-comprehension-of-program-comprehension.html
Tichy, Walter F.:
- Kiefer2015: /2016/06/12/empirical-parellelism.html
Tierney, Warren:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Tomassi, David:
- Tomassi2019: /2021/11/10/my-kingdom-for-a-dataset.html
Tomkins, Sabina:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Tortora, Genoveffa:
- DeLucia2009: /2011/08/17/three-empirical-evaluations-of-uml.html
Tourani, Parastou:
- Tourani2017: /2021/09/18/code-of-conduct-in-open-source-projects.html
Tractenberg, Rochelle E.:
- Wicherts2011: /2012/05/18/willingness-to-share-research-data-is-related-to-the-strength-of-the-evidence-and-the-quality-of-reporting-of-statistical-results.html
Tramontana, Porfirio:
- Scanniello2017: /2021/08/09/abbreviated-vs-full-names.html
Tratt, Laurence:
- Cinneide2012: /2013/02/12/experimental-assessment-of-software-metrics-using-automated-refactoring.html
Tregubov, Alexey:
- Tregubov2017: /2021/09/19/impact-of-task-switching-and-work-interruptions.html
Treude, Christoph:
- AlencarDaCosta2017: /2021/08/09/impact-of-rapid-release-cycles-on-integration-delay-of-fixed-issues.html
- Coelho2016: /2021/09/05/two-papers-on-errors.html
- Hata2019: /2021/08/23/links-in-source-code-comments.html
- Kinsman2021: /2021/10/07/how-do-software-developers-use-github-actions.html
- Prana2018: /2021/09/15/categorizing-the-content-of-github-readme-files.html
Trevisan, Michael:
- Hundhausen2011: /2011/12/04/online-vs-face-to-face-pedagogical-code-reviews-an-empirical-comparison.html
Trockman, Asher:
- Kavaler2019: /2021/09/28/javascript-quality-assurance-tools-and-usage-outcomes.html
Tsantalis, Nikolaos:
- Mahmoudi2019: /2021/12/13/refactorings-in-merge-conflicts.html
Tsay, Jason:
- Dabbish2012: /2012/03/01/social-coding-in-github.html
Turban, Daniel B.:
- Bluedorn1999: /2012/01/05/the-effects-of-stand-up-and-sit-down-meeting-formats-on-meeting-outcomes.html
Turcotte, Alexi:
- Turcotte2020: /2022/03/23/designing-types-for-r-empirically.html
Turhan, Burak:
- Fucci2016: /2016/10/05/test-driven-development.html
"T\xF3masd\xF3ttir, Krist\xEDn Fj\xF3la":
- Tomasdottir2020: /2022/04/06/adoption-of-javascript-linters.html
Uhlmann, Eric Luis:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Umarji, Medha:
- Philip2012: /2012/04/10/component-reuse-vs-snippet-remixing.html
Uyaguari, Fernando:
- Fucci2016: /2016/10/05/test-driven-development.html
Valdivia, Ana:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Vanhanen, Jari:
- Vanhanen2007: /2011/10/11/experiences-of-using-pair-programming-in-an-agile-project.html
Vartiainen, Tero:
- Taipalus2018: /2021/08/27/errors-in-sql-queries.html
Vasilescu, Bogdan:
- Kavaler2019: /2021/09/28/javascript-quality-assurance-tools-and-usage-outcomes.html
- Overney2020: /2021/10/13/an-empirical-study-of-donations-in-open-source.html
- Tomassi2019: /2021/11/10/my-kingdom-for-a-dataset.html
Vassallo, Carmine:
- Zampetti2020: /2021/10/18/bad-practices-in-continuous-integration.html
Vega-Marquez, Olga Lucero:
- Aghajani2019: /2021/10/06/software-documentation-issues-unveiled.html
Vegas, Sira:
- Krein2016: /2016/09/09/replicating-design-patterns-experiment.html
Vendome, Christopher:
- Scalabrino2021: /2021/10/05/three-papers-on-readability.html
Venolia, Gina:
- Aranda2009: /2021/09/23/the-secret-life-of-bugs.html
- Cherubini2007: /2011/06/30/lets-go-to-the-whiteboard.html
Venter, Herman:
- Barnett2011: /2011/06/30/specification-and-verification-the-spec-experience.html
Viana, Laura:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Viganola, Domenico:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
"Villes\xE8che, Florence":
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Vincur, Juraj:
- Jolak2020: /2022/03/31/textual-vs-graphic-design-descriptions-and-communication.html
Vitek, Jan:
- Turcotte2020: /2022/03/23/designing-types-for-r-empirically.html
Voichick, Finn:
- Gao2020: /2021/10/14/api-learning-processes.html
Wachs, Johannes:
- Moldon2021: /2021/10/03/how-gamification-affects-software-developers.html
Wadsworth, W. Duncan:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Wagner, Stefan:
- Fritzsch2021: /2022/03/16/resume-driven-development.html
Walker, David:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Wanders, Florian:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Wang, Peipei:
- Wang2020: /2021/08/30/two-studies-of-regular-expressions.html
Wang, Shaowei:
- Zhang2020: /2021/09/19/reading-answers-on-stack-overflow-not-enough.html
- Zhang2021b: /2022/03/08/obsolete-answers-on-stack-overflow.html
Wang, Wei:
- Hemmati2013: /2013/06/13/the-msr-cookbook-mining-a-decade-of-research.html
Wang, Xiaofeng:
- Graziotin2014: /2014/03/31/happy-sw-devs-solve-problems-better.html
Wang, Xinyu:
- Wang2016: /2016/10/02/filtering-spreadsheet-data.html
Wang, Yichen:
- Tomassi2019: /2021/11/10/my-kingdom-for-a-dataset.html
Warzel, Daniel:
- Kiefer2015: /2016/06/12/empirical-parellelism.html
Washburn, Michael:
- Washburn2016: /2016/06/05/game-postmortems.html
Watts, Krista:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Wehaibi, Sultan:
- Abdalkareem2017: /2021/09/17/why-do-developers-use-trivial-packages.html
Weill-Tessier, Pierre:
- WeillTessier2021: /2021/09/03/two-papers-about-the-blackbox-project.html
Weiss, Cathrin:
- Bettenburg2008: /2011/08/30/what-makes-a-good-bug-report.html
Wells, Jason D:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Wessel, Mairieli:
- Kinsman2021: /2021/10/07/how-do-software-developers-use-github-actions.html
- Wessel2020: /2021/09/29/effects-of-adopting-code-review-bots.html
Whelpley, Christopher E.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
White, Robert:
- Bafatakis2019: /2021/10/01/python-coding-style-compliance-on-stack-overflow.html
Whitehead, E. James:
- Lewis2013: /2013/06/06/does-bug-prediction-support-human-developers-findings-from-a-google-case-study.html
- Pan2008: /2021/09/11/common-bug-fix-patterns.html
Wicherts, Jelte M.:
- Wicherts2011: /2012/05/18/willingness-to-share-research-data-is-related-to-the-strength-of-the-evidence-and-the-quality-of-reporting-of-statistical-results.html
Wieringa, Roel:
- Racheva2010: /2011/07/04/requirements-prioritization-in-agile-projects-insights-from-a-case-study.html
Wiese, Igor:
- Wessel2020: /2021/09/29/effects-of-adopting-code-review-bots.html
Wilkerson, Jerod W.:
- Wilkerson2012: /2011/08/31/comparing-the-defect-reduction-benefits-of-code-inspection-and-test-driven-development.html
Williams, Laurie:
- Meneely2011: /2011/09/06/does-adding-manpower-also-affect-quality.html
- Nagappan2008: /2012/01/25/realizing-quality-improvement-through-test-driven-development.html
- Rahman2019: /2021/11/23/security-smells-in-infrastructure-as-code-scripts.html
- Rahman2020a: /2021/08/26/defect-taxonomy-for-infrastructure-as-code.html
Wilson, Greg:
- Almeida2017: /2021/09/04/do-software-developers-understand-open-source-licenses.html
Witchel, Emmett:
- Rossbach2010: /2011/08/24/is-transactional-programming-actually-easier.html
Won, Andy:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Woodbridge, Yonatan:
- Ajami2018: /2021/09/21/syntax-predicates-idioms-what-really-affects-code-complexity.html
Wortmann, Andreas:
- Jolak2020: /2022/03/31/textual-vs-graphic-design-descriptions-and-communication.html
Wrigstad, Tobias:
- Akerblom2016: /2016/06/13/polymorphism-in-python.html
Wu, Lawrence:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Wu, Rongxin:
- Dang2012: /2012/07/18/clustering-duplicate-crash-reports.html
Wu, Xintao:
- Shao2020: /2022/04/11/database-performance-antipatterns.html
Wyrich, Marvin:
- Fritzsch2021: /2022/03/16/resume-driven-development.html
Xia, Xin:
- Bao2021: /2022/04/04/contributor-prediction-for-github.html
- Han2021: /2021/10/16/open-source-projects-in-baidu-alibaba-and-tencent.html
Xiao, Lu:
- Mo2021: /2022/03/14/architecture-anti-patterns.html
Xiao, Tian:
- Li2013: /2013/04/16/a-characteristic-study-on-failures-of-production-distributed-data-parallel-programs.html
Xie, Tao:
- Li2013: /2013/04/16/a-characteristic-study-on-failures-of-production-distributed-data-parallel-programs.html
- Shao2020: /2022/04/11/database-performance-antipatterns.html
Xu, Chang:
- Yang2022: /2022/09/19/developer-git-knowledge.html
Xu, Tianyin:
- Xu2015: /2016/06/09/too-many-knobs.html
Xu, Zhiwu:
- Tao2021: /2021/10/20/demistifying-error-messages-in-data-science-libraries.html
Xuan, Jifeng:
- Tao2021: /2021/10/20/demistifying-error-messages-in-data-science-libraries.html
Yang, Aidan Z. H.:
- Ni2021: /2021/11/18/synthesis-approach-for-data-science-api-refactoring.html
Yang, Jinqiu:
- Chen2016: /2016/06/05/maintaining-java-orm.html
- Yasmin2020: /2022/03/09/rest-api-deprecation.html
Yang, Wei:
- Shao2020: /2022/04/11/database-performance-antipatterns.html
Yang, Wenhua:
- Yang2022: /2022/09/19/developer-git-knowledge.html
Yarkoni, Tal:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Yasmin, Jerin:
- Yasmin2020: /2022/03/09/rest-api-deprecation.html
Yin, Jianwei:
- Han2021: /2021/10/16/open-source-projects-in-baidu-alibaba-and-tencent.html
Yin, Zuoning:
- Yin2011: /2011/10/22/three-empirical-studies-from-esecfse11.html
Yip, Arthur:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Yoo, Seunghyun:
- Gulzar2016: /2016/06/05/bigdebug.html
Youngflesh, Casey:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Yu, Ju-Chi:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Yu, Xiao:
- Shao2020: /2022/04/11/database-performance-antipatterns.html
Yuan, Ding:
- Yin2011: /2011/10/22/three-empirical-studies-from-esecfse11.html
- Yuan2014: /2014/10/09/simple-testing-can-prevent-most-critical-failures.html
Zacchiroli, Stefano:
- Pietri2019: /2021/08/11/cheating-death-survival-analysis-of-python-projects.html
Zaidman, Andy:
- Beller2015: /2016/06/08/when-and-why-test.html
- Beller2019: /2021/09/12/developer-testing-in-the-ide.html
Zampetti, Fiorella:
- Zampetti2020: /2021/10/18/bad-practices-in-continuous-integration.html
Zandian, Arash:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Zavgorodniaia, Albina:
- Zavgorodniaia2021: /2021/09/26/two-papers-on-time.html
Zeller, Andreas:
- Herzig2013: /2013/06/13/its-not-a-bug-its-a-feature-how-misclassification-impacts-bug-prediction.html
- Sliwerski2005: /2021/10/02/reproducibility-and-credibility-in-empirical-software-engineering.html
- Soremekun2021: /2021/10/30/locating-faults-with-program-slicing.html
Zhang, Chong:
- Yang2022: /2022/09/19/developer-git-knowledge.html
Zhang, Dongmei:
- Dang2012: /2012/07/18/clustering-duplicate-crash-reports.html
Zhang, Haoxiang:
- Zhang2020: /2021/09/19/reading-answers-on-stack-overflow-not-enough.html
- Zhang2021b: /2022/03/08/obsolete-answers-on-stack-overflow.html
Zhang, Hongyu:
- Dang2012: /2012/07/18/clustering-duplicate-crash-reports.html
- Gu2018: /2021/12/02/deep-code-search.html
Zhang, Jingxuan:
- Zhang2021a: /2021/11/15/enriching-api-documentation-with-code-samples-and-usage-scenarios.html
Zhang, Leilei:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Zhang, Mengxiao:
- Miller2020: /2021/10/01/the-relevance-of-classic-fuzz-testing.html
Zhang, Tao:
- Zhang2021a: /2021/11/15/enriching-api-documentation-with-code-samples-and-usage-scenarios.html
Zhang, Xiangyu:
- Kim2016: /2016/10/01/apex.html
Zhang, Yu:
- Peng2021: /2021/08/17/python-language-features.html
Zhang, Yun:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
Zhao, Xu:
- Yuan2014: /2014/10/09/simple-testing-can-prevent-most-critical-failures.html
Zhi, Chen:
- Han2021: /2021/10/16/open-source-projects-in-baidu-alibaba-and-tencent.html
Zhou, Hucheng:
- Li2013: /2013/04/16/a-characteristic-study-on-failures-of-production-distributed-data-parallel-programs.html
Zhou, Yu:
- Yang2022: /2022/09/19/developer-git-knowledge.html
Zhou, Yuanyuan:
- Xu2015: /2016/06/09/too-many-knobs.html
- Yin2011: /2011/10/22/three-empirical-studies-from-esecfse11.html
Zhu, Wenhan:
- Zhu2021: /2021/08/10/developers-fix-their-own-simple-bugs-differently-from-other-developers.html
Zhu, Xiaoyan:
- Lewis2013: /2013/06/06/does-bug-prediction-support-human-developers-findings-from-a-google-case-study.html
Zhu, Yue Cai:
- Rigby2016: /2021/09/30/quantifying-and-mitigating-turnover-induced-knowledge-loss.html
Zhuang, Xin:
- Yuan2014: /2014/10/09/simple-testing-can-prevent-most-critical-failures.html
Zibman, Chava:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
Zimmermann, Thomas:
- Bettenburg2008: /2011/08/30/what-makes-a-good-bug-report.html
- Ford2017: /2021/09/07/characterizing-software-engineering-work-with-personas.html
- Hindle2012: /2012/08/23/using-topic-modelling-to-understand-requirements.html
- Kochhar2019: /2022/04/23/closed-to-open-source.html
- Lo2015: /2016/06/09/perceived-relevance.html
- Meyer2014: /2015/08/23/perception-productivity.html
- Meyer2021: /2021/10/04/the-daily-life-of-software-developers.html
- Rodeghero2021: /2022/03/28/remote-onboarding.html
- Sliwerski2005: /2021/10/02/reproducibility-and-credibility-in-empirical-software-engineering.html
- Washburn2016: /2016/06/05/game-postmortems.html
Zingaro, Daniel:
- Liao2016: /2016/09/16/five-from-icer-2016.html
Zou, Ying:
- Khomh2012: /2012/05/17/do-faster-releases-improve-software-quality.html
- Zhang2021b: /2022/03/08/obsolete-answers-on-stack-overflow.html
Zoufaly, Matthew:
- Prabhu2011: /2012/01/17/a-survey-of-the-practice-of-computational-science.html
de Almeida Maia, Marcelo:
- Campos2017: /2021/09/11/common-bug-fix-patterns.html
de F.S.M. Russo, Rosaria:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
"de P\xE1dua, Guilherme B.":
- DePadua2018: /2021/09/16/exception-handling-practices-and-post-release-defects.html
de Silva, Niko:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
de Souza, Cleidson R. B.:
- Sharp2016: /2016/09/08/ethnography-in-ese.html
van Aert, Robbie C.M.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
van Assen, Marcel A.L.M.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
van Deursen, Arie:
- Coelho2016: /2021/09/05/two-papers-on-errors.html
- Hermans2011: /2012/05/24/supporting-professional-spreadsheet-users-by-generating-leveled-dataflow-diagrams.html
- Tomasdottir2020: /2022/04/06/adoption-of-javascript-linters.html
van den Akker, Olmo R.:
- Schweinsberg2021: /2021/09/25/how-reliable-is-scientific-software.html
"van der Hoek, Andr\xE9":
- Ghiotto2020: /2021/08/12/on-the-nature-of-merge-conflicts.html
- Mangano2015: /2021/09/24/how-software-designers-interact-with-sketches-at-the-whiteboard.html
"\xC5kerblom, Beatrice":
- Akerblom2016: /2016/06/13/polymorphism-in-python.html
"\xC9ric Tanter":
- Nagappan2015: /2016/06/09/goto-in-c.html
"\u015Aliwerski, Jacek":
- Sliwerski2005: /2021/10/02/reproducibility-and-credibility-in-empirical-software-engineering.html
